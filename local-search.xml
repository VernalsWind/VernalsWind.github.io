<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>delegate</title>
    <link href="/delegate/"/>
    <url>/delegate/</url>
    
    <content type="html"><![CDATA[<p>delegate代表，可以理解成，函数指针，方法的家庭地址，我们要找一个人做核酸，就像程序要调用一个方法，我们不知道这个人的名字，那么我们去他的家庭住址找他，拿着大喇叭喊：402的住户做核酸了吗？如果知道名字我们就喊：熊大你做核酸了吗？402就是地址啦！熟悉C语言的同学们听说过一切皆地址吧。402就像一个delegate，有了他，就可以叫住在402的熊大或者熊二下来做核酸了！</p><p><strong>委托这个翻译，我真的不喜欢！</strong>虽然一开始我还真的努力理解过，就像是别人委托你去哄一哄他家小孩，你可以拿玩具和小孩玩，这是一种方法，也可以给小孩讲故事，这又是一种方法，委托没有指定哪种方法，但就是委托给你了，你看着办！这个真是为了理解还要瞎编/_\<br><strong>接口这个翻译我也不喜欢！</strong>哼，本少女就是这么傲娇，虽然我觉得他比委托翻译的好一点了，interface，首先，face翻译不出来就是不行！face可以理解成脸面，我们人的脸是被皮肤藏起来的，只露出了七窍，不然，如果，嘿嘿，那就是画皮最恐怖的一幕了，所以，接口就是给了这么几个孔，里面的血淋淋的组织器官都被封装起来，我们表面只是呼吸或者用眼观察，其实内部神经系统，内分泌系统，呼吸系统是非常复杂的生理反应机制。而且每个人继承了眼睛这一接口，但有人就是狗眼看人低，有人的眼睛会温暖别人，是心灵的窗口，接口实现的方式是不一样的。我觉得叫interface门面不错，我记得有个人说得特别好，interface接口就像是麦当劳肯德基一类的招牌，挂了麦当劳的门面，里面一般会有汉堡和可乐，会有一些方法的实现</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>PageRank</title>
    <link href="/PageRank/"/>
    <url>/PageRank/</url>
    
    <content type="html"><![CDATA[<h1 id="PageRank算法"><a href="#PageRank算法" class="headerlink" title="PageRank算法"></a>PageRank算法</h1><p>想要知道一个网页 $W_i$的排序， 不仅要知道有多少网页链接了它， 而且还得知道那些网页各自的排序——因为来自排序靠前网页的链接更有分量。 但作为互联网大家庭的一员， $W_i$ 本身对其它网页的排序也是有贡献的， 而且基于来自排序靠前网页的链接更有分量的原则， 这种贡献与 $W_i$ 本身的排序也有关。 这样一来， 我们就陷入了一个 “先有鸡还是先有蛋” 的循环： 要想知道 $W_i$ 的排序， 就得知道与它链接的其它网页的排序， 而要想知道那些网页的排序， 却又首先得知道 $W_i$ 的排序。这就陷入了先有鸡还是先有蛋的循环。</p><p>为了打破这个循环， 佩奇和布林采用了一个很巧妙的思路， 即分析一个虚拟用户在互联网上的漫游过程。 他们假定： 虚拟用户一旦访问了一个网页后， 下一步将有相同的几率访问被该网页所链接的任何一个其它网页。</p><p>如果网页 $W_i$ 有 $N_i$ 个对外链接， 则虚拟用户在访问了 $W_i$ 之后， 下一步点击那些链接当中的任何一个的几率均为 $1/N_i$。<br>我们用 $p_i(n)$ 表示虚拟用户在进行第 $ n $ 次浏览时访问网页 $W_i$ 的几率</p><script type="math/tex; mode=display">p_i(n+1)=\sum_{j} p_j(n)p_{j->i}/N_{j}</script><p>我们将虚拟用户第 n 次浏览时访问各网页的几率合并为一个列向量 $p_n$， 它的第 i 个分量为  $p_i$(n)， 并引进一个只与互联网结构有关的矩阵 H， 它的第 i 行 j 列的矩阵元为 $H_{ij} = p_{j-&gt;i}/N_{j}$</p><script type="math/tex; mode=display">p_{n+1} = Hp_n</script><p>上述公式描述的是一种马尔可夫过程 (Markov process)， 而且是其中最简单的一类， 即所谓的平稳马尔可夫过程 (stationary Markov process),而 H 则是描述马尔可夫过程中的转移概率分布的所谓转移矩阵 (transition matrix)。</p><script type="math/tex; mode=display">p_n = H^np_0</script><p>其中 $p_0$ 为虚拟读者初次浏览时访问各网页的几率分布 (在佩奇和布林的原始论文中， 这一几率分布被假定为是均匀分布)。</p><h1 id="第一次修正：悬挂网页-随机性修正"><a href="#第一次修正：悬挂网页-随机性修正" class="headerlink" title="第一次修正：悬挂网页-随机性修正"></a>第一次修正：悬挂网页-随机性修正</h1><p>无论真实用户还是虚拟用户， 当他们访问到 “悬挂网页” 时， 都不应该，也不会 “在一棵树上吊死”， 而是会自行访问其它网页。 对于真实用户来说， 自行访问的网页显然与各人的兴趣有关， 但对于在平均意义上代表真实用户的虚拟用户来说， 佩奇假定它将会在整个互联网上随机选取一个网页进行访问。 用数学语言来说， 这相当于是把 H 的列向量中所有的零向量都换成 e/N (其中 e 是所有分量都为 1 的列向量， N 为互联网上的网页总数)。 如果我们引进一个描述 “悬挂网页” 的指标向量 (indicator vector) a， 它的第 i 个分量的取值视 $W_i$ 是否为 “悬挂网页” 而定——如果是 “悬挂网页”， 取值为 1， 否则为 0——并用 S 表示修正后的矩阵， 则：</p><script type="math/tex; mode=display">S = H+ea^{T}/N</script><p>显然， 这样定义的 S 矩阵的每一列的矩阵元之和都是 1， 从而是一个不折不扣的随机矩阵。 这一修正因此而被称为随机性修正 (stochasticity adjustment)。</p><h1 id="第二次修正：直接跳转-素性修正"><a href="#第二次修正：直接跳转-素性修正" class="headerlink" title="第二次修正：直接跳转-素性修正"></a>第二次修正：直接跳转-素性修正</h1><p> 他们假定， 虚拟用户虽然是虚拟的， 但多少也有一些 “性格”， 不会完全受当前网页所限， 死板地只访问其所提供的链接。 具体地说， 他们假定虚拟用户在每一步都有一个小于 1 的几率 $\alpha$访问当前网页所提供的链接， 同时却也有一个几率 $1-\alpha$ 不受那些链接所限， 随机访问互联网上的任何一个网站。（比如直接从书签栏访问网页）<br> 于是把上述 S 矩阵变成了一个新的矩阵</p><script type="math/tex; mode=display">G = \alpha S + (1-\alpha)ee^T/N</script><p> 这个矩阵不仅是一个随机矩阵， 而且由于第二项的加盟， <strong>它有了一个新的特点， 即所有矩阵元都为正。 这样的矩阵是所谓的素矩阵 (primitive matrix)。 这一修正因此而被称为素性修正 (primitivity adjustment)</strong>。</p><p>  $G^np_0$ 收敛速度的快慢是关系到算法是否实用的重要因素， 而这个因素恰恰与 $\alpha$ 有关。 可以证明， $\alpha$ 越小， $G^np_0$ 的收敛速度就越快。 但 $\alpha$ 也不能太小， 因为太小的话， “佩奇排序” 中最精华的部分， 即以网页间的彼此链接为基础的排序思路就被弱化了 (因为这部分的贡献正比于 $\alpha$)， 这显然是得不偿失的。 因此， 在 $\alpha$ 的选取上有很多折衷的考虑要做， 佩奇最终选择的数值是 $\alpha$ = 0.85。</p><p>  p 其实是矩阵 G 的特征值为 1 的本征向量， 而利用虚拟用户确定网页排序的思路其实是在用迭代法解决上述特征值问题。 在数学上可以证明， 上述特征向量是唯一的， 而且 G 的其它特征值 $\lambda$ 全都满足 |$\lambda$|&lt;1 (更准确地说， 是 |$\lambda|≤ \alpha$——这也正是  $G^np_0$ 的收敛速度与 $\alpha$ 有关的原因)。</p><p>这个算法就是谷歌排序的数学基础， 而其中的矩阵 G 则被称为谷歌矩阵 (Google matrix)。</p>]]></content>
    
    
    
    <tags>
      
      <tag>homework</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Review</title>
    <link href="/reviewer/"/>
    <url>/reviewer/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="d14bacc1906e83eb464a268483d37ce58a77b7b8a7d122a4a91e48813ee80bac">10d79030e8222445804370796b90fca1b3149e2c2a0f36d6b4ea04e548758c21becd059191a0f413a1563469f1c78f71095b7e02822b09d742e5550d26fe0eb973edc8dda4beb8be628d1db3ebd89d0c37bf2e6b136b7988b7bd9cf479564e8e5583ef49ea33cf08dc5c1464413321b2c0c3a5482edfdbba91a63d0ef9d3b09f04867f4f645fb58086cd08b8154bff4d136f2c1b8dc31a9aba276eed57679d58ceacaca8f9d58cb02aa5b741d6fb3172d42918c687fa078549bdf6ccef35543ab11fcb30c9c471fef2fd6fb8244a6251babced206b552474d0b78664f03c631aaeb6b4175aa46b38a8ff2ad0254f716808b6338faa2ad5e0c7f4e9261fb6015d0f9361940bf9bb7f2f15f37896b7bbd9f630c122060248eeab45e34d194c550a3e09b7db070320ab1e203da5aa615ca5a93368ddaaf1ff2611bff540cd8e7e18d02d4db92b2d7a7accc0c41f4746520c6cf1e7ce50a20e6fcb7b7f8f6d2bbb3f7d76ed939e186144cc995fa9fc1ab58507d309e425b1cd00aaea98c44fa9bb8ecaeccf3372d2d8349a69d6a862baf2390034bfb1295aef34547ab0aaa5f635751c3b22459703977899fd49ee4f55b877dfdeff897cc9d2e8d9344d8f0a6bc98e61f1050b200c779ee15126a15d7312909940cf018969015c0c06db8539d6dae477e464f689d27a21583d7369a6d98907dbbde04f16db66634a68a36d88c772ce8b96cd993072ef2ddcb129b73d5dcab4ee35e732b88a58218e2875fb2a2a8730644acebf6f346e26836233fe88690574699e478764a14e3dae8ba0f89a2625413de922d44b6eb8a411400b871e803ef1a152d183d2d674f29eb7b55ced17da289404f2a56d98e3be136f7b07b5237020d03572254e5d7c657f7a312d8b18784d04ec4ab46cc63f8729d3afc64b86c9a1ff238960bb3a68ab2afc0093697de623e303e3163cc15d62b9f6c5fccb637cabeae69301663eb4c726590ebeb5b7f008f90ae8ea73b12fa95d6b444cd2a21f3cfb35fd88b9fccba14adc63f475c3f1ac2f770ab757f8ed918342e83b6782687e2c033ea4d7ec4aa9bd0a47200ec561404fc96d32eb4055187ab684498d1beed3a1beb2bff85a2de97a427d27df92e363f1140ff1752a206744d95af83f699d56202ba3e0ec6d7009867aaa4d7cd1574cba7a2c02d5d768dc147301ce58c6bc6f68f45384f28cedda3a091499eebebb3af3e50ee0fd996620e718a56dbde54cfc89c550ee540cbb60ff810334f4a6d819c57a586976ff265ff6600456bc902f775f9384d39a0e1ee374a6af8369dd6d616eb264a4119c59a6dc96c912ce0a5b3eef106b815f3f2ba1a95fbe0b3921a45ea5613c466a412b1769a6b0232ba447af7f1cc8d7f4d26376fb7e67aa1b01d310774dbc86e8962322fcf9d9940e189bc69c7825cae66cc3366ea07c174e959403816bd8e7d634961953e9a046736e8747cc2e49204dffd3fd5f535d61044140ec53b6d3ad8724c680ba3b25c4768343a2d556ce9f7456bcfcb8acb8b9d3647bd9c2017c1d2634d56abcea1fdc5759722572b48d555c8d11c5b6404d28c23fd5743a96452cbe4f2a4ab2bfb905cce5c484e7e073b1782f65b5394096c86540b3228e05e59c968bb091f967632490586f3ea5a2a348d849b255616fd95165b3ced3f7a0597f8813cc9453434e63328f3026a5ef12ae7bb63efc5f4fdb883add5dd67343c7a685db61caf5a45c8f509a96039ce0c2076735d18da95d7b35dad4ddb4e34a0cd5480368e8caf6ee1dba2f86ad5dfe96e1eab51d948b84da7b367efaa3b4a71429ebe12a224716f6633096f4accdd0816291c87635c6e2f01e5b35a5c1c9ab183a17a198c266a0e0a721fd6dae5b793c9b7b522a95467057a0ca30971f8dbc11650042e6c62d26207808e2ba4f07db40ace3fb62e241a4234c8d380b9a3341af24427ae9cc51c6abaaff3471f68cea4b92664fd20f3628b1328b45386d42bb02cb2d74e884d43232ac524ed5509103b904d736646a8f24822a850fadfe249759fff6e35f86c520580f3a9170689e782963fd45c1d6070ef195de61976b8f0ed62f061ae6aecc7ffde84bc39c0a35191ac3b077d3c0c05d9e90330e456442fa59c9d40083b55b3afea2f7e6dea2dc431ac16c500d32f1f177badabe629af1c581ed2bcfdac036e5f039beb0d838b288249a137c4eb9f92082616dcf9f3124c184b7e8143739443d941338981921a201a9c7197f677855b6fba7b356bf6e83e3ddab583d4ed852be69a5b90b83d626b61ce0ff4ffab87fb94de4494d501e99b9c64eea513c55c04ecf46aa9cd5767b03fcdfc30a54bba55be44a92f3ddba4e12f5f4b99192f2f3197d0f29910f40d45391d602f4395df2dcd75c5c6377e6fb6b25df8dfa777bd6e5caa883d36f72b5a7fa92f34698209cd856d524138ce29e549d55f135af499ffa4483b55157858feb67bd357dd35622f3685f44b793fc87e36209c8e075577e2821d15687a382834999f15de074ac2bcdd9256651192f2884d263252227d1c4ea49beb90d3982a9a56fec376f0ade94662d31870eafe5b3aff0df93a339ec0cdb6f6dc5e6f1a62893ce202a3faec215c126a1a130691204d7707027fdce6e13c42d437de074e9ebb50f1785206d9c844b2f8c35596cc6e01eeb77c2c417da1129639e8fcb1cdb5ca519562b05ed6e2d04b724bc61d8bf7c46bba6cf486805724bfdb85a34dddd721ff9c632ae431203429e1e99ac8bcc1479093f41eb6eb33966e1b1891ad54959f6be2d4ae8cd282b5d8b6c01fd25f5ad04b2949c42ccc9648fcefa50a30983bbf294e43b4e35f46e3ab6d42d9354924fc925c59000afe5cb1101b6572a5177b3c45e0b45752216508b26a57f78edcc60a5561296558396ca498a07aeb8640ea430368384db54a2096b7bde176ebbe03ae55691518ca93c43b6656638d41d0ba51134f1f9b07392553b09a48b0ddb38c7d54903dcc2f979872f4fde6ef9a80b201c72b975cf6a68defb31cffebfe50489fb24bc695d24f766c59db6774e52b81aea5e4b858f2157b7a12264a482832ad37444b0bedfbbaea96f9c6bdbcd8b10d75da78f36a5f3e7f893d6aa214a9ac5bb5601c137ba20c8014e232971822e73cacd6c2a8990e2c3ce98635a791b1038a9f02e9aef8286d0bf1894088cb27219f32303e34ef812c69b669c17ca93b506e14a760f403e788344290b304ce8981b2e16fb23ceb4ef1c3db04525f5619884d56f029a8391f64188b4185e571722119dbac497734860212572ca9ffb909e51c765adf7ab34e35a82bec349fc964fe9695f72f02227478a3449fd050f7bace2b62e3bc75258b0d5ed589dcccf6d5bb500b7cd962b2685ec17cc8451caf3738a25a7c0cc229a9e452c7e450ca5804b05</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
    <tags>
      
      <tag>study</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C#王楠老师留的作业</title>
    <link href="/sopho/"/>
    <url>/sopho/</url>
    
    <content type="html"><![CDATA[<p> 题目<br><img src="sopho/a.jpg" alt="question"><br> Human类<br><figure class="highlight c#"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></div></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Text;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">homework</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Human</span>:<span class="hljs-title">Interface1</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Human</span>()</span><br>        &#123;<br><br>        &#125;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Human</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> name</span>)</span><br>        &#123;<br>            _name = name;<br><br>        &#125;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Human</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> age</span>)</span><br>        &#123;<br>            <br>               _age = age;<br>        &#125;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Human</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> name, <span class="hljs-built_in">int</span> age</span>)</span> &#123; _name = name; <span class="hljs-keyword">if</span> (age &gt; <span class="hljs-number">0</span> &amp;&amp; age &lt; <span class="hljs-number">130</span>) &#123; _age = age; &#125;  &#125;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-built_in">string</span> _name;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-built_in">int</span> _age;<br>        <br>        <br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">virtual</span> <span class="hljs-keyword">void</span> <span class="hljs-title">introduce</span>()</span><br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">$&quot;姓名：<span class="hljs-subst">&#123;_name&#125;</span>&quot;</span>);<br>           <br>            <span class="hljs-keyword">if</span> (_age == <span class="hljs-number">0</span>) &#123; Console.WriteLine(<span class="hljs-string">$&quot;年龄:input is not legal&quot;</span>); &#125;<br>            <span class="hljs-keyword">else</span> &#123; Console.WriteLine(<span class="hljs-string">$&quot;年龄：<span class="hljs-subst">&#123;_age&#125;</span>&quot;</span>); &#125;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">speak</span>()</span><br>        &#123;<br>            introduce();<br>        &#125;<br>    &#125;<br>&#125;<br><br><br><br></code></pre></td></tr></table></figure><br> Star,Singer,Producer类<br><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Text;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">homework</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Star</span> : <span class="hljs-title">Human</span><br>    &#123;   <span class="hljs-built_in">string</span> _realm;<br>        <span class="hljs-built_in">int</span> _outyear;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Star</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> name, <span class="hljs-built_in">int</span> age, <span class="hljs-built_in">string</span> realm, <span class="hljs-built_in">int</span> outyear</span>) : <span class="hljs-title">base</span>(<span class="hljs-params">name, age</span>)</span><br>        &#123;<br>            _realm = realm;<br>            _outyear = outyear;<br><br>        &#125;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">introduce</span>()</span><br>        &#123;<br>            <span class="hljs-keyword">base</span>.introduce();<br>            Console.WriteLine(<span class="hljs-string">$&quot;出道时间:<span class="hljs-subst">&#123;_outyear&#125;</span>&quot;</span>);<br>            Console.WriteLine(<span class="hljs-string">$&quot;领域：<span class="hljs-subst">&#123;_realm&#125;</span>&quot;</span>);<br>        &#125;<br><br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Singer</span>:<span class="hljs-title">Star</span><br>    &#123;<br>        <span class="hljs-built_in">string</span> ?_song;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Singer</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> name, <span class="hljs-built_in">int</span> age, <span class="hljs-built_in">string</span> realm, <span class="hljs-built_in">int</span> outyear,<span class="hljs-built_in">string</span> song</span>) :<span class="hljs-title">base</span>(<span class="hljs-params"> name,  age,  realm,  outyear</span>)</span><br>        &#123;<br>            _song=song;<br>        &#125;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">introduce</span>()</span><br>        &#123;<br>            <span class="hljs-keyword">base</span>.introduce();<br>            Console.WriteLine(<span class="hljs-string">$&quot;成名曲：<span class="hljs-subst">&#123;_song&#125;</span>&quot;</span>);<br>        &#125;<br><br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Producer</span> : <span class="hljs-title">Star</span><br>    &#123;<br>        <span class="hljs-built_in">string</span> _movie;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Producer</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> name, <span class="hljs-built_in">int</span> age, <span class="hljs-built_in">string</span> realm, <span class="hljs-built_in">int</span> outyear, <span class="hljs-built_in">string</span> movie</span>) : <span class="hljs-title">base</span>(<span class="hljs-params">name, age, realm, outyear</span>)</span><br>        &#123;<br>             _movie = movie;<br>        &#125;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">introduce</span>()</span><br>        &#123;<br>            <span class="hljs-keyword">base</span>.introduce();<br>            Console.WriteLine(<span class="hljs-string">$&quot;成名电影:<span class="hljs-subst">&#123;_movie&#125;</span>&quot;</span>);<br>            <br>        &#125;<br><br><br>    &#125;<br>&#125;<br><br><br></code></pre></td></tr></table></figure><br> 接口Interface1<br><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Text;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">homework</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title">Interface1</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">speak</span>()</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><br>Program 控制台程序入口<br><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">namespace</span> <span class="hljs-title">homework</span><br>&#123;<br>    <span class="hljs-keyword">class</span> <span class="hljs-title">Program</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>        &#123;<br>            Producer leo = <span class="hljs-keyword">new</span> Producer(<span class="hljs-string">&quot;leonardo dicaprio&quot;</span>, <span class="hljs-number">148</span>,<span class="hljs-string">&quot;movie actor&quot;</span>,<span class="hljs-number">1990</span>,<span class="hljs-string">&quot;Titannic&quot;</span>);<br>            leo.speak();<br>            Singer jay = <span class="hljs-keyword">new</span> Singer(<span class="hljs-string">&quot;Jay Chou&quot;</span>, <span class="hljs-number">43</span>, <span class="hljs-string">&quot;rap&quot;</span>, <span class="hljs-number">2000</span>, <span class="hljs-string">&quot;晴天&quot;</span>);<br>           jay.introduce();<br>            Star Dayao = <span class="hljs-keyword">new</span> Star(<span class="hljs-string">&quot;Yao ming&quot;</span>, <span class="hljs-number">42</span>, <span class="hljs-string">&quot;basketball&quot;</span>, <span class="hljs-number">1998</span>);<br>            Dayao.speak();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><br> 运行结果<br><img src="sopho/b.jpg" alt="result"></p>]]></content>
    
    
    
    <tags>
      
      <tag>study</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C#期末备考</title>
    <link href="/C_note/"/>
    <url>/C_note/</url>
    
    <content type="html"><![CDATA[<p>1.装箱和拆箱<br><figure class="highlight c#"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs C#"><span class="hljs-built_in">int</span> i=<span class="hljs-number">0</span>;<br>System.Object obj=i;<span class="hljs-comment">//装箱</span><br><span class="hljs-built_in">int</span> j =(<span class="hljs-built_in">int</span>)obj;<span class="hljs-comment">//拆箱</span><br></code></pre></td></tr></table></figure><br>2.值类型和引用类型<br>值类型变量是直接包含值。将一个值类型变量赋给另一个值类型变量，是复制包含的值，默认值是0.<br>引用<br><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">namespace</span> <span class="hljs-title">ConsoleApp1</span>&#123;<br><span class="hljs-comment"><span class="hljs-doctag">///</span><span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span>一个简单的引用类型</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span><span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Ref</span><br>    &#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> iValue&#123;<span class="hljs-keyword">get</span>;<span class="hljs-keyword">set</span>;&#125;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Ref</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> i</span>)</span><br>        &#123;<br>        iValue=i;<br>        &#125;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-built_in">string</span> <span class="hljs-title">ToString</span>()</span><br>        &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">$&quot;iValue 的值为：<span class="hljs-subst">&#123;iValue.ToString()&#125;</span>&quot;</span>;<br>        &#125;<br><br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">struct</span> Val<br>    &#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> Value&#123;<span class="hljs-keyword">get</span>;<span class="hljs-keyword">set</span>;&#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Val</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> i</span>)</span><br>        &#123;<br>            Value=i;<br>        &#125;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-built_in">string</span> <span class="hljs-title">ToString</span>()</span><br>        &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">$&quot;Value 的值为：<span class="hljs-subst">&#123;Value.ToString()&#125;</span>&quot;</span>;<br>        &#125;<br><br>    &#125;<br>    <span class="hljs-keyword">class</span> <span class="hljs-title">program</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>        &#123;   <span class="hljs-comment">//测试引用类型的赋值</span><br>            Ref ref1=<span class="hljs-keyword">new</span> Ref(<span class="hljs-number">1</span>);<br>            Ref ref2 = ref1;<br>            ref2.iValue=<span class="hljs-number">2</span>;<br>            <span class="hljs-comment">//测试值类型的赋值</span><br>            Val val1=<span class="hljs-keyword">new</span> Val(<span class="hljs-number">1</span>);<br>            Val val2=val1;<br>            val2.Value=<span class="hljs-number">2</span>;<br>            Console.WriteLine(<span class="hljs-string">$&quot;ref1:<span class="hljs-subst">&#123;ref1&#125;</span>&quot;</span>);<br>            Console.WriteLine(<span class="hljs-string">$&quot;ref2:<span class="hljs-subst">&#123;ref2&#125;</span>&quot;</span>);<br>            Console.WriteLine(<span class="hljs-string">$&quot;val1:<span class="hljs-subst">&#123;val1&#125;</span>&quot;</span>);<br>            Console.WriteLine(<span class="hljs-string">$&quot;val2:<span class="hljs-subst">&#123;val2&#125;</span>&quot;</span>);<br>            Console.ReadKey();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><br><img src="/C_note/console.jpg" class=""><br><img src="/C_note/ref.png" class=""><br><img src="/C_note/val.png" class=""></p><p>3.</p>]]></content>
    
    
    
    <tags>
      
      <tag>study</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Crop FSR Imagery Classification Algorithm</title>
    <link href="/RS-study/"/>
    <url>/RS-study/</url>
    
    <content type="html"><![CDATA[<h2 id="Get-Imagery"><a href="#Get-Imagery" class="headerlink" title="Get Imagery"></a>Get Imagery</h2><ul><li>RapidEye, IKONOS, and WorldView</li><li>Uninhabited Aerial Vehicle Synthetic Aperture Radar (UAVSAR)</li><li>FSR imagery has fewer multispectral bands(around 4)</li><li>Synthetic-aperture radar (SAR)<br>is a form of radar that is used to create two-dimensional images or three-dimensional reconstructions of objects, such as landscapes. SAR uses the motion of the radar antenna over a target region to provide finer spatial resolution than conventional stationary beam-scanning radars.</li></ul><h2 id="good-expressions"><a href="#good-expressions" class="headerlink" title="good expressions"></a>good expressions</h2><ol><li>be of prime concern</li><li>distinguish-&gt;discriminate</li><li>make effective agrarian management policies</li><li>spatial and temporal characteristics时空特征</li><li>pose a great challenge for</li><li>timely, cost-efficient</li><li>inevitably compromised by不可避免地受制于</li><li>with a view to exploiting 为了去探索<object data="克里金法.pdf" type="application/pdf" width="100%" height="700px"> <embed src="克里金法.pdf">     <p>This browser does not support PDFs. Please download the PDF to view it: <a href="克里金法.pdf">Download PDF</a>.</p> </embed></object></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>study</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hydrology</title>
    <link href="/hydrology/"/>
    <url>/hydrology/</url>
    
    <content type="html"><![CDATA[<ol><li>什么是土壤？</li><li>按照土壤中颗粒大小，可以把土壤颗粒分成四个等级（图1）。最大是砾石，是直径大于2毫米小的石子；其次是砂粒，直径在0.02-2毫米之间的颗粒称为砂粒，和商店里卖的较粗的棒子面差不多，它们是砂土的主要组成；直径在0.002-0.02毫米之间的土壤颗粒叫做粉粒，和面粉的颗粒大小差不多，而直径小于0.002毫米（2微米）的土壤颗粒则称为粘粒，和一般的细菌大小差不多，是肉眼看不到的，只有在显微镜下才可以观察到。</li><li>sand, loamy sand, sandy loam, loam, silt loam, silt, sandy clay loam, clay loam, silty clay loam, sandy clay, silty clay, and clay </li><li><img src="/hydrology/HSG_USDA_overlap.png" class="" title="土壤分类"></li><li>Group A: sand, loamy sand or sandy loam types of soils. It has low runoff potential and high infiltration rates even when thoroughly wetted. They consist chiefly of deep, well to excessively drained sands or gravels and have a high rate of water transmission.</li><li>Group B: silt loam or loam. It has a moderate infiltration rate when thoroughly wetted and consists chiefly or moderately deep to deep, moderately well to well drained soils with moderately fine to moderately coarse textures.</li><li>Group C: sandy clay loam. They have low infiltration rates when thoroughly wetted and consist chiefly of soils with a layer that impedes downward movement of water and soils with moderately fine to fine structure.</li><li>Group D: clay loam, silty clay loam, sandy clay, silty clay or clay. This HSG has the highest runoff potential. They have very low infiltration rates when thoroughly wetted and consist chiefly of clay soils with a high swelling potential, soils with a permanent high water table, soils with a claypan or clay layer at or near the surface and shallow soils over nearly impervious material.<br> Soil is a natural body comprised of solids (minerals and organic matter), liquid, and gases that occurs on the land surface, occupies space, and is characterized by one or both of the following: horizons, or layers, that are distinguishable from the initial material as a result of additions, losses, transfers, and transformations of energy and matter or the ability to support rooted plants 只是支持植物吗？真菌也是一种植物吗？in a natural environment.<br>土壤的根本特征是肥力。土壤包括固相（矿物、有机质）、空气和水分。<br>The upper limit of soil is the boundary between soil and air, shallow water, live plants, or plant materials that have not begun to decompose. <strong>Areas are not considered to have soil</strong> if the surface is permanently covered by water too deep (typically more than 2.5 meters) for the growth of rooted plants.合着湖泊底下的淤泥不是土壤？淤泥（Silt），又称沉泥或粉土，是泥土的基本组成成份之一。地质学中，淤泥是介于沙土及黏土之间，长约2到62微米、直径4到9微米的一种颗粒状物料，主要由石英及长石这两种矿物组成[1]。淤泥可能以土壤的成份或悬浊水体内的沉积物两种形式出现。当河道泛滥，又或被山崩时的泥石流带动，淤泥会在流动时随同水体在沿途沉积成为土壤。由于淤泥的比表面积属中度，非黏粘，有好像塑胶那样带弹性。当完全干燥时，淤泥会变回粉尘般的幼细，但潮湿后立即又变回黏滑。在手持的放大镜下，淤泥清晰可见，往往带有尖锐的外表。当以牙齿咬或以舌头触摸时，这种棱角亦能感觉到，而这亦是分辨水中的淤泥或黏土的一种方法。</li><li>原生矿物和次生矿物定义，以及它们对土壤的意义。</li><li>次生黏土矿物中的高岭土、蒙脱石和水化云母的特点。它们分别是原生矿物水解过程的哪个阶段形成的。</li><li>次生黏土矿物形成与地理环境的关系。</li><li>硅铝铁率的计算。</li><li>重要的土壤性质：土壤颜色、土壤质地、土壤孔隙度、土壤容重</li><li>土壤容重、土壤孔隙度与土壤质地的关系，有机质显著影响土壤容重和土壤孔隙度。</li><li>土壤质地、容重、孔隙度与地理环境的关系（这里的地理环境不仅是气候，还包括地形）。</li><li>有机质分为普通有机质和腐殖质，腐殖质是混合物。腐殖质分类。</li><li>影响土壤有机质分解转化的因素，尤其是不同地理环境下土壤有机质分解转化的不同。</li><li>土壤有机质分解转化对土壤的意义</li><li>土壤固相组成与地理环境的关系</li><li>土壤空气组成与地理环境的关系</li><li>土壤热容量和热导率与土壤质地的关系</li><li>土壤温度的时空变化规律<br>水文循环的降水和蒸发<br>evaporation从土壤、水面散发<br>transpiration从植物蒸腾<br>evapotranspiration蒸散发</li></ol><ul><li><p>按蒸发面</p><ul><li>水面</li><li>土壤（地下水e</li><li>植物<br>-水面蒸发的影响因素</li><li>饱和水汽压差</li><li>湿度<br>-风（冷空气反而<br>verbose-verbiage<br>diffuse-effusive<br>rambling<br>incisive-scissors<br>outspoken\</li></ul><p>this good weather is a boon<br>proletariat<br>蓝领工人<br>heterogeneous<br>varied mixed dissimilar<br>反义：homogeneous<br>heterosexual<br>heterodox<br>7.pittance<br>8.glib<br>smooth-spoken, speaking in a ready, fluent manner, with natural or offhand ease<br>talkative in a nonchalant way<br>nonchalant-no chat<br> having an air of easy unconcern or indifference<br>suave,facile,bland,voluble,flippant,unctuous<br>smoothly though often superficially gracious and sophisticated </p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>study</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>三江平原耕地质量实验报告</title>
    <link href="/landuse/"/>
    <url>/landuse/</url>
    
    <content type="html"><![CDATA[<h1 id="三江平原三市耕地质量实验报告"><a href="#三江平原三市耕地质量实验报告" class="headerlink" title="三江平原三市耕地质量实验报告"></a>三江平原三市耕地质量实验报告</h1><h2 id="作者"><a href="#作者" class="headerlink" title="作者"></a>作者</h2><p>大家好，我是东北师范大学2020级吴蒙蔚，这是我大二下空间分析大作业，从4月23日世界读书日开始，到5月1日劳动节,我一直在肝这份作业。<br>做作业的过程中，书本里抽象的概念变得生动起来，看似轻松的步骤方法，殊不知经历了多少人接力造轮子，不断封装复杂的算法，最后呈现出来简单的接口。弄懂复杂算法的意义在哪里，在于接下来的运用，数值分析课讲到了常微分方程的欧拉法，matlab一行代码可以得到结果，但老师带着我们推了一节课，结果重要吗？方法才是关键，思想才是闪闪发光之处.</p><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p> 三江平原的耕地质量关乎民生，一份合理的耕地质量得分图有着重要的意义.</p><ul><li>首先是设置各个指标的权重：从日常经验来看，积温，有机质，坡度对耕地质量评估的权重应该是高的，分别是0.15，0.2，0.2，我们选择土地去耕作时，也基本就看看是不是温度够，坡度缓，有机质丰富，其实植物生长还需要三大营养素：氮磷钾，这个也是重要的指标，于是权重均为0.1，坡向在东北平原地区并不如丘陵高山地区重要，故设为0.05。最后是降水，因为东北地区整体降水足，和西北缺水地区不同，故其降水权重设为0.1.</li><li>其次是整理思路：<ul><li>我们首先需要什么数据？土壤，积温，降水，地形，土地利用类型。</li><li>其次是怎么处理？积温是个难题，因为我们得到的WorldClim的数据是月平均气温，如果月均气温低于10，那么这个月的积温不能用30$\cdot$(月平均气温)来替代，应该适当缩小。</li><li>一共8个指标，需要8个栅格。</li><li>土壤数据转4次栅格，然后根据分类表重分类可以得到4个指标分数的栅格，</li><li>GDEM地形数据可以得到坡度坡向2个指标分数的栅格。</li><li>降水和积温用栅格计算器得到累积的5个月的降水和积温再按照分类表重分类得到2个指标的得分栅格，</li><li>最后按照权重将8个指标加起来，得到总的质量。</li><li>然后通过土地利用图提取出耕地的质量得分，再运用分割栅格的自然断点法得到5级土地，分区统计得到各县市的耕地质量得分。</li><li>最后提高分辨率：重采样，得到100m的栅格数据</li></ul></li></ul><h2 id="研究区："><a href="#研究区：" class="headerlink" title="研究区："></a>研究区：</h2><h2 id="双鸭山市，佳木斯市，鹤岗市"><a href="#双鸭山市，佳木斯市，鹤岗市" class="headerlink" title="双鸭山市，佳木斯市，鹤岗市"></a>双鸭山市，佳木斯市，鹤岗市</h2><h2 id="数据来源："><a href="#数据来源：" class="headerlink" title="数据来源："></a>数据来源：</h2><h3 id="1-NASA-earthdata，用来查找GDEM数据"><a href="#1-NASA-earthdata，用来查找GDEM数据" class="headerlink" title="1. NASA earthdata，用来查找GDEM数据"></a>1. <a href="https://search.earthdata.nasa.gov/search/">NASA earthdata</a>，用来查找GDEM数据</h3><ul><li>IDM下载器<a href="https://www.internetdownloadmanager.cn/download">下载</a></li><li>举例：N47 E132条带的GDEM数据 <a href="https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/ASTGTM.003/ASTGTMV003_N47E132_dem.tif">https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/ASTGTM.003/ASTGTMV003_N47E132_dem.tif</a><br> （更改N,E后面数字可以获取其他经纬度的影像）<ul><li><img src="/landuse/GDEM.jpg" class="" title="GDEM"><h3 id="2-Worldclim"><a href="#2-Worldclim" class="headerlink" title="2. Worldclim"></a>2. Worldclim</h3><a href="https://data.biogeo.ucdavis.edu/data/worldclim/v2.1/base/wc2.1_30s_prec.zip">2010-2018年各月降水</a> ，<a href="https://data.biogeo.ucdavis.edu/data/worldclim/v2.1/base/wc2.1_30s_tavg.zip">各月平均温度</a><h3 id="3-行政区数据来源"><a href="#3-行政区数据来源" class="headerlink" title="3. 行政区数据来源"></a>3. 行政区数据来源</h3>因为是2021年9月下载的，所以不知道来源，这是文件——<a href="https://drive.google.com/file/d/1ckfxhP74KSR9q2N1sR2lSATJIzFOWfLs/view?usp=sharing">谷歌云盘地址</a><h3 id="4-土壤数据"><a href="#4-土壤数据" class="headerlink" title="4. 土壤数据"></a>4. 土壤数据</h3>由郭笑怡老师提供——[谷歌云盘地址]（侵删）(<a href="https://drive.google.com/file/d/1koLqOBiK6T_KUlUT7OzyhThgSBR4HV19/view?usp=sharing">https://drive.google.com/file/d/1koLqOBiK6T_KUlUT7OzyhThgSBR4HV19/view?usp=sharing</a>)  <h3 id="5-GlobaLand30数据"><a href="#5-GlobaLand30数据" class="headerlink" title="5. GlobaLand30数据"></a>5. <a href="http://www.globallandcover.com/">GlobaLand30数据</a></h3><h4 id="所用条带：N52-45，N53-45"><a href="#所用条带：N52-45，N53-45" class="headerlink" title="所用条带：N52_45，N53_45"></a>所用条带：N52_45，N53_45</h4></li></ul></li></ul><h2 id="数据处理分析工具：Arcgis-pro"><a href="#数据处理分析工具：Arcgis-pro" class="headerlink" title="数据处理分析工具：Arcgis pro"></a>数据处理分析工具：Arcgis pro</h2><h2 id="数据处理方法："><a href="#数据处理方法：" class="headerlink" title="数据处理方法："></a>数据处理方法：</h2><h3 id="Extract-by-Mask"><a href="#Extract-by-Mask" class="headerlink" title="Extract by Mask"></a>Extract by Mask</h3>                                <img src="/landuse/ext_dem.jpg" class="" title="Extract by Mask">                                              <h3 id="FeatureclassToFeatureclass"><a href="#FeatureclassToFeatureclass" class="headerlink" title="FeatureclassToFeatureclass"></a>FeatureclassToFeatureclass</h3> <img src="/landuse/feature.jpg" class="" title="FeatureclassToFeatureclass">                                            <img src="/landuse/feature7.jpg" class="" title="FeatureclassToFeatureclass"><h3 id="Extract-By-Attribute"><a href="#Extract-By-Attribute" class="headerlink" title="Extract By Attribute"></a>Extract By Attribute</h3><p><img src="https://s2.loli.net/2022/04/29/YTZwcFGp4xhVkqd.jpg" alt="屏幕截图 2022-04-29 221130.jpg"><br><img src="https://s2.loli.net/2022/04/29/FNpjeLBJ6y49KEC.jpg" alt="屏幕截图 2022-04-29 221130.jpg"></p><h3 id="降水处理"><a href="#降水处理" class="headerlink" title="降水处理"></a>降水处理</h3> <img src="/landuse/%E9%99%8D%E6%B0%B4%E5%A4%84%E7%90%86.jpg" class="" title="降水">        <img src="/landuse/allprep.jpg" class="" title="降水处理"><p> <img src="https://s2.loli.net/2022/04/29/cuAUQEoFp59mOwD.jpg" alt="屏幕截图 2022-04-29 221130.jpg"></p><h3 id="土壤处理"><a href="#土壤处理" class="headerlink" title="土壤处理"></a>土壤处理</h3>  <img src="/landuse/%E9%87%8D%E5%88%86%E7%B1%BB%E5%9C%9F%E5%A3%A4.jpg" class="" title="土壤">   <img src="/landuse/soil_pro.jpg" class="" title="土壤">   <img src="/landuse/soil_reclas.jpg" class="" title="土壤"> <h3 id="坡度坡向"><a href="#坡度坡向" class="headerlink" title="坡度坡向"></a>坡度坡向</h3><img src="/landuse/%E5%9D%A1%E5%BA%A6%E5%9D%A1%E5%90%91.jpg" class="">                <img src="/landuse/%E5%9C%B0%E5%9B%BE%E4%BB%A3%E6%95%B0%E5%9D%A1%E5%BA%A6.jpg" class=""><h3 id="积温初步方法"><a href="#积温初步方法" class="headerlink" title="积温初步方法"></a>积温初步方法</h3><img src="/landuse/%E7%A7%AF%E6%B8%A91.jpg" class="">                             <img src="/landuse/%E7%A7%AF%E6%B8%A92.jpg" class="">                                  <h3 id="积温天数比重法"><a href="#积温天数比重法" class="headerlink" title="积温天数比重法"></a>积温天数比重法</h3><img src="/landuse/%E7%A7%AF%E6%B8%A93.jpg" class=""><img src="/landuse/%E9%87%8D%E5%88%86%E7%B1%BB%E6%B8%A9%E5%BA%A6.jpg" class=""><img src="/landuse/reclass_jiwen.jpg" class="">                                         <h3 id="重分类坡度坡向"><a href="#重分类坡度坡向" class="headerlink" title="重分类坡度坡向"></a>重分类坡度坡向</h3><img src="/landuse/%E9%87%8D%E5%88%86%E7%B1%BB%E5%9D%A1.jpg" class="">              <p><img src="https://s2.loli.net/2022/04/29/oKanCykeJcAzGpg.jpg" alt="屏幕截图 2022-04-29 221130.jpg">                                               </p><div class="table-container"><table><thead><tr><th>范围重分类</th><th><strong>语法</strong></th></tr></thead><tbody><tr><td><a href="https://pro.arcgis.com/zh-cn/pro-app/2.8/arcpy/spatial-analyst/an-overview-of-transformation-classes.htm">Remap range 帮助</a></td><td>RemapRange (remapTable)</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>remapTable</th><th>参数</th><th>说明</th></tr></thead><tbody><tr><td></td><td>[[startValue, endValue, newValue],…]</td><td>用于将旧值（按范围指定）重映射为新值的重映射表。</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>有机质/%</th><th>全氮/%</th><th>全磷/%</th><th>全钾/%</th><th>坡向</th><th>坡度</th><th>积温</th><th>降水</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td>[-1,0,75]</td></tr><tr><td></td><td></td><td></td><td></td><td>[247.5,292.5,70]</td></tr><tr><td></td><td></td><td></td><td></td><td>[292.5,337.5,60]</td></tr><tr><td></td><td></td><td></td><td></td><td>[337.5,360,50]</td></tr><tr><td></td><td>[0.5,100,100]</td><td></td><td></td><td>[202.5,247.5,80]</td><td></td></tr><tr><td>[0,2,40]</td><td>[0,0.1,50]</td><td>[0,0.05,40]</td><td>[0,1.5,40]</td><td>[0,22.5,50]</td><td>[0,2,100]</td><td>[0,2000,10]</td><td>[0,450,70]</td></tr><tr><td>[2,4,50]</td><td>[0.1,0.2,60]</td><td>[0.05,0.07,50]</td><td>[1.5,1.9,50]</td><td>[22.5,67.5,60]</td><td>[2,6,80]</td><td>[2000,2200,30]</td><td>[450,500,80]</td></tr><tr><td>[4,6,60]</td><td>[0.2,0.3,70]</td><td>[0.07,0.1,60]</td><td>[1.9,2.1,70]</td><td>[67.5,112.5,80]</td><td>[6,15,60]</td><td>[2200,2400,50]</td><td>[500,550,90]</td></tr><tr><td>[6,8,80]</td><td>[0.3,0.4,80]</td><td>[0.1,0.15,80]</td><td>[2.1,2.5,80]</td><td>[112.5,157.5,90]</td><td>[15,25,40]</td><td>[2400,2600,70]</td><td>[550,1000,100]</td></tr><tr><td>[8,100,100]</td><td>[0.4,0.5,90]</td><td>[0.15,100,100]</td><td>[2.5,100,100]</td><td>[157.5,202.5,100]</td><td>[25,90,0]</td><td>[2600,4000,90]</td></tr></tbody></table></div><h3 id="加权求总体质量得分"><a href="#加权求总体质量得分" class="headerlink" title="加权求总体质量得分"></a>加权求总体质量得分</h3><h3 id="自然断点法分割栅格"><a href="#自然断点法分割栅格" class="headerlink" title="自然断点法分割栅格"></a>自然断点法分割栅格</h3><p><strong>Jenks natural breaks optimization seems to be one dimensional k-means</strong><br>There are two steps that must be repeated:</p><ul><li>Calculate the sum of squared deviations from the class means (SDCM).</li><li>Choose a new way of dividing the data into classes, perhaps by moving one or more data points from one class to a different one.<br>New class deviations are then calculated, and the process is repeated until the sum of the within class deviations reaches a minimal value.      <img src="/landuse/natura_b2.jpg" class="">                                        <img src="/landuse/natura_break.jpg" class="">   <h3 id="分区统计"><a href="#分区统计" class="headerlink" title="分区统计"></a>分区统计</h3><img src="/landuse/zonal.jpg" class=""><img src="/landuse/zonal2.jpg" class=""></li></ul><h3 id="重采样"><a href="#重采样" class="headerlink" title="重采样"></a>重采样</h3><img src="/landuse/rasample7.jpg" class=""><img src="/landuse/resample8.jpg" class=""><h3 id="计算权重"><a href="#计算权重" class="headerlink" title="计算权重"></a>计算权重</h3><img src="/landuse/weight.jpg" class=""><div class="table-container"><table><thead><tr><th>OBJECTID</th><th>Value    Count</th><th>Weight</th></tr></thead><tbody><tr><td></td></tr></tbody></table></div><p>1 级土地|1839|0.07<br>2    级土地|6998|0.25<br>3    级土地|    9212|0.34<br>4 级土地    |    7044|0.26<br>5 级土地    |    2178|0.08</p><h2 id="未解疑问"><a href="#未解疑问" class="headerlink" title="未解疑问"></a>未解疑问</h2><p> 用栅格计算器的条件函数反复嵌套来重分类坡度坡向,笨拙但有用且不失优雅，反而reclassify坡度坡向时，会报错，下面就是报错，我累了，我还是不知道为啥不能重分类</p><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><pre><code class="hljs python">remap=RemapRange([[<span class="hljs-number">0</span>,<span class="hljs-number">22.5</span>,<span class="hljs-number">50</span>],<br>[<span class="hljs-number">22.5</span>,<span class="hljs-number">67.5</span>,<span class="hljs-number">60</span>],<br>[<span class="hljs-number">67.5</span>,<span class="hljs-number">112.5</span>,<span class="hljs-number">80</span>],<br>[<span class="hljs-number">112.5</span>,<span class="hljs-number">157.5</span>,<span class="hljs-number">90</span>],<br>[-<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">75</span>],<br>[<span class="hljs-number">157.5</span>,<span class="hljs-number">202.5</span>,<span class="hljs-number">100</span>],<br>[<span class="hljs-number">202.5</span>,<span class="hljs-number">247.5</span>,<span class="hljs-number">80</span>],<br>[<span class="hljs-number">247.5</span>,<span class="hljs-number">292.5</span>,<span class="hljs-number">70</span>],<br>[<span class="hljs-number">292.5</span>,<span class="hljs-number">337.5</span>,<span class="hljs-number">60</span>],<br>[<span class="hljs-number">337.5</span>,<span class="hljs-number">360</span>,<span class="hljs-number">50</span>]])         <br>reclass_aspect=Reclassify(<span class="hljs-string">&quot;aspect&quot;</span>,<span class="hljs-string">&quot;Value&quot;</span>,remap)<br>reclass_aspect.save(<span class="hljs-string">&quot;reclass_aspect&quot;</span>)<br></code></pre></td></tr></table></figure><blockquote><p>ERROR 000628: Cannot set input into parameter in_raster.</p></blockquote><h2 id="代码流程"><a href="#代码流程" class="headerlink" title="代码流程"></a>代码流程</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><code class="hljs python"><br><span class="hljs-keyword">import</span> arcpy<br><span class="hljs-keyword">from</span> arcpy.sa <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment">#--------通过sql的where语句&quot;Name IN (&#x27;双鸭山市&#x27;, &#x27;鹤岗市&#x27;, &#x27;佳木斯市&#x27;)&quot;-------</span><br><span class="hljs-comment">#--------从要素类到要素类----------------------------------------------------</span><br>arcpy.FeatureClassToFeatureClass_conversion(<br>    <span class="hljs-string">r&quot;C:\Users\17503\Desktop\市界.shp&quot;</span>,<br>    <span class="hljs-string">r&quot;C:\Users\17503\Documents\ArcGIS\Projects\MyProject1\MyProject1.gdb&quot;</span>,<br>    <span class="hljs-string">&quot;city&quot;</span>,<span class="hljs-string">&quot;Name IN (&#x27;双鸭山市&#x27;, &#x27;鹤岗市&#x27;, &#x27;佳木斯市&#x27;)&quot;</span>)<br><span class="hljs-comment">#---------按属性提取 Globaland3土地利用栅格-----------------------------------------------</span><br>attExtract = ExtractByAttributes(<span class="hljs-string">&quot;globaland30&quot;</span>, <span class="hljs-string">&quot;VALUE = 10&quot;</span>) <br>attExtract.save(<span class="hljs-string">r&quot;C:\Users\17503\Documents\ArcGIS\Projects\MyProject1\MyProject1.gdb\agriculture&quot;</span>)<br><span class="hljs-comment">#---------按掩膜提取三江平原三市的耕地栅格----------------------------------------------------</span><br>etr_agriculture=ExtractByMask(attExtract,<span class="hljs-string">r&quot;C:\Users\17503\Documents\ArcGIS\Projects\MyProject1\MyProject1.gdb\city&quot;</span>)<br>etr_agriculture.save(<span class="hljs-string">&quot;etr_agriculture&quot;</span>)<br><span class="hljs-comment">#------------------------------------按掩膜批量提取降水数据-----------------------------------------------</span><br><br>extract=[]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>,<span class="hljs-number">10</span>):<br>    extract.append(ExtractByMask(<span class="hljs-string">r&quot;C:\Users\17503\Downloads\wc21_30s_prec\wc21_30s_prec_0&#123;i&#125;.tif&quot;</span>.<span class="hljs-built_in">format</span>(i=i),<br>                            <span class="hljs-string">r&quot;C:\Users\17503\Documents\ArcGIS\Projects\MyProject1\MyProject1.gdb\etr_agriculture&quot;</span>))<br>    <br><span class="hljs-comment">#-------------------------相加栅格并重分类降水数据--------------------------------   </span><br><br>all_prep=extract[<span class="hljs-number">0</span>]+extract[<span class="hljs-number">1</span>]+extract[<span class="hljs-number">2</span>]+extract[<span class="hljs-number">3</span>]+extract[<span class="hljs-number">4</span>]<br>all_prep.save(<span class="hljs-string">r&quot;C:\Users\17503\Documents\ArcGIS\Projects\MyProject1\MyProject1.gdb\all_prep&quot;</span>)<br>remap=RemapRange([[<span class="hljs-number">0</span>,<span class="hljs-number">450</span>,<span class="hljs-number">70</span>],[<span class="hljs-number">450</span>,<span class="hljs-number">500</span>,<span class="hljs-number">80</span>],[<span class="hljs-number">500</span>,<span class="hljs-number">550</span>,<span class="hljs-number">90</span>],[<span class="hljs-number">550</span>,<span class="hljs-number">1000</span>,<span class="hljs-number">100</span>]])<br>reclass_prep=Reclassify(<span class="hljs-string">&quot;all_prep&quot;</span>,<span class="hljs-string">&quot;Value&quot;</span>,remap)<br>reclass_prep.save(<span class="hljs-string">&quot;reclass_prep&quot;</span>)<br><br><span class="hljs-comment">#--------------------------------------普通积温算法----------------</span><br><span class="hljs-keyword">from</span> arcpy.analysis <span class="hljs-keyword">import</span> *<br>arcpy.env.workspace=<span class="hljs-string">r&quot;C:\Users\17503\Downloads\Compressed\wc2.1_30s_tavg\积温&quot;</span><br>N1=Raster(<span class="hljs-string">&quot;wc21_30s_tavg_09(1).tif&quot;</span>)<br>N2=Raster(<span class="hljs-string">&quot;wc21_30s_tavg_09(2).tif&quot;</span>)<br>N3=Raster(<span class="hljs-string">&quot;wc21_30s_tavg_09(3).tif&quot;</span>)<br>N4=Raster(<span class="hljs-string">&quot;wc21_30s_tavg_09(4).tif&quot;</span>)<br>N5=Raster(<span class="hljs-string">&quot;wc21_30s_tavg_09(5).tif&quot;</span>)<br>out_ras=N1+N2+N3+N4+N5<br>out_ras.save(<span class="hljs-string">&quot;output.tif&quot;</span>)<br>etr_temp=ExtractByMask(<span class="hljs-string">&quot;output.tif&quot;</span>,<br><span class="hljs-string">r&quot;C:\Users\17503\Documents\ArcGIS\Projects\MyProject1\MyProject1.gdb\etr_agriculture&quot;</span>)<br>etr_temp.save(<span class="hljs-string">r&quot;C:\Users\17503\Documents\ArcGIS\Projects\MyProject1\MyProject1.gdb\etr_temp&quot;</span>)<br><br><span class="hljs-comment">#-------如果平均积温小于10，应该乘的天数，应小于30，平均气温越低，天数小于10的概率越大--------</span><br><span class="hljs-comment">#-------设月平均气温是 n 且 n&lt;10,则求积温时，乘天数为30*n/(10),即 3n-----------------------</span><br>etr=[]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>):<br><span class="hljs-comment">#循环：按掩膜提取，并存到数组etr里，python数组从0开始  </span><br>    etr.append(ExtractByMask(<span class="hljs-string">&quot;wc21_30s_tavg_09(&#123;i&#125;).tif&quot;</span>.<span class="hljs-built_in">format</span>(i=i),<br>                     <span class="hljs-string">r&quot;C:\Users\17503\Documents\ArcGIS\Projects\MyProject1\MyProject1.gdb\etr_agriculture&quot;</span>))<br>  <span class="hljs-comment">#Con函数判断月均气温是否小于10，如果是，则赋值3n^2，否则便直接=30n</span><br>    etr[i-<span class="hljs-number">1</span>]=Con(etr[i-<span class="hljs-number">1</span>]&lt;<span class="hljs-number">10</span>,etr[i-<span class="hljs-number">1</span>]*etr[i-<span class="hljs-number">1</span>]*<span class="hljs-number">3</span>,etr[i-<span class="hljs-number">1</span>]*<span class="hljs-number">30</span>)<br>    etr[i-<span class="hljs-number">1</span>].save(<span class="hljs-string">r&quot;C:\Users\17503\Documents\ArcGIS\Projects\MyProject1\MyProject1.gdb\etr_tempr&#123;i&#125;&quot;</span>.<span class="hljs-built_in">format</span>(i=i))<br>    <br>out_temp2=etr[<span class="hljs-number">0</span>]+etr[<span class="hljs-number">1</span>]+etr[<span class="hljs-number">2</span>]+etr[<span class="hljs-number">3</span>]+etr[<span class="hljs-number">4</span>]<br>out_temp2.save(<span class="hljs-string">r&quot;C:\Users\17503\Documents\ArcGIS\Projects\MyProject1\MyProject1.gdb\etrfinal&quot;</span>)<br>    <br><span class="hljs-comment">#---------------积温重分类，Remap_Range映射:[start,end,value]把从 start到 end 之间的值映射成 value-------------------------    </span><br>    <br>    <br>arcpy.env.workspace=<span class="hljs-string">r&quot;C:\Users\17503\Documents\ArcGIS\Projects\MyProject1\MyProject1.gdb&quot;</span><br>remap=RemapRange([[<span class="hljs-number">0</span>,<span class="hljs-number">2000</span>,<span class="hljs-number">10</span>],[<span class="hljs-number">2000</span>,<span class="hljs-number">2200</span>,<span class="hljs-number">30</span>],[<span class="hljs-number">2200</span>,<span class="hljs-number">2400</span>,<span class="hljs-number">50</span>],[<span class="hljs-number">2400</span>,<span class="hljs-number">2600</span>,<span class="hljs-number">70</span>],[<span class="hljs-number">2600</span>,<span class="hljs-number">3000</span>,<span class="hljs-number">90</span>]])<br>Reclassify(<span class="hljs-string">&quot;etrfinal&quot;</span>,<span class="hljs-string">&quot;Value&quot;</span>,remap)<br>reclass=Reclassify(<span class="hljs-string">&quot;etrfinal&quot;</span>,<span class="hljs-string">&quot;Value&quot;</span>,remap)<br>reclass.save(<span class="hljs-string">&quot;reclass_temp&quot;</span>)    <br><br><br><span class="hljs-comment">#----------SoilData土壤数据先裁剪再通过PolygonToRaster栅格化，再重分类，反复4次--------------------------</span><br><span class="hljs-comment">#----------------裁剪------------------------</span><br>Clip(<span class="hljs-string">r&quot;C:\Users\17503\Desktop\study\SoilData\土壤数据.shp&quot;</span>,<span class="hljs-string">&quot;县clip&quot;</span>,<span class="hljs-string">&quot;土clip&quot;</span>)<br><span class="hljs-comment">#------------按有机质栅格化，重分类------------</span><br>arcpy.conversion.PolygonToRaster(<span class="hljs-string">&quot;土clip&quot;</span>,<span class="hljs-string">&quot;有机质&quot;</span>,<span class="hljs-string">&quot;yjw_ras&quot;</span>)<br>remap=RemapRange([[<span class="hljs-number">0</span>,<span class="hljs-number">2</span>,<span class="hljs-number">40</span>],[<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">50</span>],[<span class="hljs-number">4</span>,<span class="hljs-number">6</span>,<span class="hljs-number">60</span>],[<span class="hljs-number">6</span>,<span class="hljs-number">8</span>,<span class="hljs-number">80</span>],[<span class="hljs-number">8</span>,<span class="hljs-number">100</span>,<span class="hljs-number">100</span>]])<br>reclass_yjw=Reclassify(<span class="hljs-string">&quot;yjw_ras&quot;</span>,<span class="hljs-string">&quot;Value&quot;</span>,remap)<br>reclass_yjw.save(<span class="hljs-string">&quot;reclass_yjw&quot;</span>)<br><span class="hljs-comment">#------------按全磷栅格化，重分类------------</span><br>arcpy.conversion.PolygonToRaster(<span class="hljs-string">&quot;土clip&quot;</span>,<span class="hljs-string">&quot;全磷&quot;</span>,<span class="hljs-string">&quot;ql_ras&quot;</span>)<br>remap=RemapRange([[<span class="hljs-number">0</span>,<span class="hljs-number">0.05</span>,<span class="hljs-number">40</span>],[<span class="hljs-number">0.05</span>,<span class="hljs-number">0.07</span>,<span class="hljs-number">50</span>],[<span class="hljs-number">0.07</span>,<span class="hljs-number">0.1</span>,<span class="hljs-number">60</span>],[<span class="hljs-number">0.1</span>,<span class="hljs-number">0.15</span>,<span class="hljs-number">80</span>],[<span class="hljs-number">0.15</span>,<span class="hljs-number">100</span>,<span class="hljs-number">100</span>]])<br>reclass_ql=Reclassify(<span class="hljs-string">&quot;ql_ras&quot;</span>,<span class="hljs-string">&quot;Value&quot;</span>,remap)<br>reclass_ql.save(<span class="hljs-string">&quot;reclass_ql&quot;</span>)<br><span class="hljs-comment">#------------按全氮栅格化，重分类------------</span><br>arcpy.conversion.PolygonToRaster(<span class="hljs-string">&quot;土clip&quot;</span>,<span class="hljs-string">&quot;全氮&quot;</span>,<span class="hljs-string">&quot;qN_ras&quot;</span>)<br>remap=RemapRange([[<span class="hljs-number">0</span>,<span class="hljs-number">0.1</span>,<span class="hljs-number">50</span>],[<span class="hljs-number">0.1</span>,<span class="hljs-number">0.2</span>,<span class="hljs-number">60</span>],[<span class="hljs-number">0.2</span>,<span class="hljs-number">0.3</span>,<span class="hljs-number">70</span>],[<span class="hljs-number">0.3</span>,<span class="hljs-number">0.4</span>,<span class="hljs-number">80</span>],[<span class="hljs-number">0.4</span>,<span class="hljs-number">0.5</span>,<span class="hljs-number">90</span>],[<span class="hljs-number">0.5</span>,<span class="hljs-number">100</span>,<span class="hljs-number">100</span>]])<br>reclass_qN=Reclassify(<span class="hljs-string">&quot;qN_ras&quot;</span>,<span class="hljs-string">&quot;Value&quot;</span>,remap)<br>reclass_qN.save(<span class="hljs-string">&quot;reclass_qN&quot;</span>)<br><span class="hljs-comment">#------------按全钾栅格化，重分类------------</span><br>arcpy.conversion.PolygonToRaster(<span class="hljs-string">&quot;土clip&quot;</span>,<span class="hljs-string">&quot;全钾&quot;</span>,<span class="hljs-string">&quot;qK_ras&quot;</span>)<br>remap=RemapRange([[<span class="hljs-number">0</span>,<span class="hljs-number">1.5</span>,<span class="hljs-number">40</span>],[<span class="hljs-number">1.5</span>,<span class="hljs-number">1.9</span>,<span class="hljs-number">50</span>],[<span class="hljs-number">1.9</span>,<span class="hljs-number">2.1</span>,<span class="hljs-number">70</span>],[<span class="hljs-number">2.1</span>,<span class="hljs-number">2.5</span>,<span class="hljs-number">80</span>],[<span class="hljs-number">2.5</span>,<span class="hljs-number">100</span>,<span class="hljs-number">100</span>]])<br>reclass_qK=Reclassify(<span class="hljs-string">&quot;qK_ras&quot;</span>,<span class="hljs-string">&quot;Value&quot;</span>,remap)<br>reclass_qK.save(<span class="hljs-string">&quot;reclass_qK&quot;</span>)<br><br><span class="hljs-comment">#----------坡度坡向---------------------</span><br><span class="hljs-comment">#-------省略 Mosaic环节，对不起，&quot;ASTGTMV003_N45E129_dem.tif&quot;就是 Mosaic之后的 GDEM数据-----------</span><br>extra_dem=ExtractByMask(<span class="hljs-string">&quot;ASTGTMV003_N45E129_dem.tif&quot;</span>,<span class="hljs-string">&quot;县clip&quot;</span>)<br>extra_dem.save(<span class="hljs-string">&quot;extra_dem&quot;</span>)<br><span class="hljs-comment">#地图代数</span><br><span class="hljs-comment">#-----------坡度----------</span><br>slope=Slope(<span class="hljs-string">&quot;extra_dem&quot;</span>)<br>slope.save(<span class="hljs-string">&quot;slope&quot;</span>)<br><span class="hljs-comment">#----------坡向-----------</span><br>aspect=Aspect(<span class="hljs-string">&quot;extra_dem&quot;</span>)<br>aspect.save(<span class="hljs-string">&quot;aspect&quot;</span>)<br><span class="hljs-comment">#----------根据Con函数逐步分类坡度-----------</span><br>reclass_slope=Con(slope&lt;=<span class="hljs-number">2.0</span>,<span class="hljs-number">100</span>,<br>Con(slope&lt;=<span class="hljs-number">6.0</span>,<span class="hljs-number">80</span>,<br>Con(slope&lt;=<span class="hljs-number">15.0</span>,<span class="hljs-number">60</span>,<br>Con(slope&lt;=<span class="hljs-number">25.0</span>,<span class="hljs-number">40</span>,<span class="hljs-number">20</span>))))<br>reclass_slope.save(<span class="hljs-string">&quot;reclass_slope&quot;</span>)<br><span class="hljs-comment">#---------根据Con函数逐步分类坡向----------------------------</span><br>reclass_aspect=Con(aspect&lt;=-<span class="hljs-number">1.0</span>,<span class="hljs-number">75</span>,Con(aspect&lt;=<span class="hljs-number">22.5</span>,<span class="hljs-number">50</span>,<br>    Con(aspect&lt;=<span class="hljs-number">67.5</span>,<span class="hljs-number">60</span>,Con(aspect&lt;=<span class="hljs-number">112.5</span>,<span class="hljs-number">80</span>,<br>        Con(aspect&lt;=<span class="hljs-number">157.5</span>,<span class="hljs-number">90</span>,Con(aspect&lt;=<span class="hljs-number">202.5</span>,<span class="hljs-number">100</span>,<br>        Con(aspect&lt;=<span class="hljs-number">247.5</span>,<span class="hljs-number">80</span>,<br>        Con(aspect&lt;=<span class="hljs-number">292.5</span>,<span class="hljs-number">70</span>,<br>        Con(aspect&lt;=<span class="hljs-number">337.5</span>,<span class="hljs-number">60</span>,<br>        Con(aspect&lt;=<span class="hljs-number">360</span>,<span class="hljs-number">50</span>,<span class="hljs-number">0</span>))))))))))<br><span class="hljs-comment">#-----------加权算总耕地质量栅格-------------------------</span><br>quality=reclass_prep*<span class="hljs-number">0.1</span>+reclass_aspect*<span class="hljs-number">0.05</span>+reclass_slope*<span class="hljs-number">0.2</span>+reclass*<span class="hljs-number">0.15</span>+reclass_yjw*<span class="hljs-number">0.2</span>+reclass_qK*<span class="hljs-number">0.1</span>+reclass_qN*<span class="hljs-number">0.1</span>+reclass_ql*<span class="hljs-number">0.1</span><br>quality.save(<span class="hljs-string">&quot;quality&quot;</span>)<br><span class="hljs-comment">#------------自然断点法分割栅格------------------------</span><br>outslice = Slice(<span class="hljs-string">&quot;quality&quot;</span>,<span class="hljs-number">5</span>,<span class="hljs-string">&quot;NATURAL_BREAKS&quot;</span>)<br>outslice.save(<span class="hljs-string">&quot;outslice&quot;</span>)<br><span class="hljs-comment">#-----------分区统计-----------------------------------</span><br>zonal=ZonalStatistics(<span class="hljs-string">&quot;县clip&quot;</span>,<span class="hljs-string">&quot;OBJECTID&quot;</span>,outslice,<span class="hljs-string">&quot;MEAN&quot;</span>)<br><span class="hljs-comment">#-------------修改栅格大小：重采样--------------------------------------</span><br>arcpy.Resample_management(<span class="hljs-string">&quot;Extract_outs1&quot;</span>,<span class="hljs-string">&quot;outresample&quot;</span>,<span class="hljs-string">&quot;0.000025 0.000025&quot;</span>,<span class="hljs-string">&quot;NEAREST&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><img src="/landuse/Layout1.jpg" class=""><img src="/landuse/Layout2.jpg" class=""><h2 id="项目下载地址"><a href="#项目下载地址" class="headerlink" title="项目下载地址"></a><a href="https://github.com/VernalsWind/VernalsWind.github.io/blob/main/MyProject.aprx">项目下载地址</a></h2>]]></content>
    
    
    <categories>
      
      <category>GIS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>assignment</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>论文</title>
    <link href="/project/"/>
    <url>/project/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="7bac931b9af6a3fca098a71c9631e33236b5e4583ba179df6c6da6a0f73bcd8e"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>UAV&amp;RS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>R语言</title>
    <link href="/stasticR/"/>
    <url>/stasticR/</url>
    
    <content type="html"><![CDATA[<p><a href="R空间自相关的变异函数.html">R空间自相关的变异函数</a><br><a href="聚类.html">聚类分析总结</a><br><a href="RPubs - 多元统计分析.html">R多元统计分析</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2020013199</title>
    <link href="/numeric/"/>
    <url>/numeric/</url>
    
    <content type="html"><![CDATA[<figure class="highlight matlab"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></div></td><td class="code"><pre><code class="hljs matlab">h=input(<span class="hljs-string">&#x27;请输入步长&#x27;</span>);<br>[x,u]=pro1(h);<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">d</span>=<span class="hljs-title">f</span><span class="hljs-params">(x,u)</span></span><br>d=<span class="hljs-built_in">exp</span>(x)<span class="hljs-number">-100</span>*u;<br><span class="hljs-keyword">end</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">[x,u]</span> = <span class="hljs-title">pro1</span><span class="hljs-params">(h)</span></span><br>x1=<span class="hljs-number">0</span>;<br>x2=<span class="hljs-number">1</span>;<br>u1=<span class="hljs-number">1</span>;<br><br>N=<span class="hljs-built_in">abs</span>(x2-x1)/h;<br>u=<span class="hljs-built_in">zeros</span>(N+<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br>up=<span class="hljs-built_in">zeros</span>(N+<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br>x=<span class="hljs-built_in">zeros</span>(N+<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br>u(<span class="hljs-number">1</span>)=u1;<br>up(<span class="hljs-number">1</span>)=u1;<br>x(<span class="hljs-number">1</span>)=x1;<br><br> <span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span> = <span class="hljs-number">1</span>:N<br>    up(<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>)=u(<span class="hljs-built_in">i</span>)+f(x(<span class="hljs-built_in">i</span>),u(<span class="hljs-built_in">i</span>))*h;<br>    uc=u(<span class="hljs-built_in">i</span>)+f(x(<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>),up(<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>))*h;<br>    u(<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>)=(uc+up(<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>))/<span class="hljs-number">2</span>;<br>    x(<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>)=x(<span class="hljs-built_in">i</span>)+h;<br>    <span class="hljs-built_in">disp</span>(u(<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>));<br> <span class="hljs-keyword">end</span><br>syms z(t);  <br><br><br>ys=dsolve(diff(z,t)==<span class="hljs-built_in">exp</span>(t)<span class="hljs-number">-100</span>*z,z(<span class="hljs-number">0</span>)==<span class="hljs-number">1</span>);<br><span class="hljs-built_in">disp</span>(ys)<br>subplot(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>);<br><span class="hljs-built_in">plot</span>(x,u);<br>ylabel(<span class="hljs-string">&#x27;改进Euler&#x27;</span>);<br>title(<span class="hljs-string">&#x27;改进Euler函数&#x27;</span>);<br>subplot(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>);<br><span class="hljs-built_in">plot</span>(x,up);<br>ylabel(<span class="hljs-string">&#x27;Euler&#x27;</span>);<br>title(<span class="hljs-string">&#x27;Euler函数&#x27;</span>);<br>subplot(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>);<br><span class="hljs-built_in">plot</span>(u,up);<br><br><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><img src="/numeric/%E6%AC%A7%E6%8B%891.jpg" class="" title="结果1"><img src="/numeric/euler2.jpg" class="" title="结果2">]]></content>
    
    
    <categories>
      
      <category>matlab</category>
      
    </categories>
    
    
    <tags>
      
      <tag>study</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>timeseries</title>
    <link href="/timeseries/"/>
    <url>/timeseries/</url>
    
    <content type="html"><![CDATA[<h2 id="吴蒙蔚"><a href="#吴蒙蔚" class="headerlink" title="吴蒙蔚"></a>吴蒙蔚</h2><h2 id="Matlab实现季节变动预测"><a href="#Matlab实现季节变动预测" class="headerlink" title="Matlab实现季节变动预测"></a>Matlab实现季节变动预测</h2><figure class="highlight matlab"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></div></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-built_in">length</span>=input(<span class="hljs-string">&#x27;please input data length&#x27;</span>);<br>data=input(<span class="hljs-string">&#x27;please input data&#x27;</span>);<br>out_arr(<span class="hljs-built_in">length</span>+<span class="hljs-number">1</span>)=<span class="hljs-number">0</span>;<br>data(<span class="hljs-built_in">length</span>+<span class="hljs-number">1</span>)=<span class="hljs-number">0</span>;<br>n(<span class="hljs-built_in">length</span>+<span class="hljs-number">1</span>)=<span class="hljs-number">0</span>;<br>s1(<span class="hljs-built_in">length</span>+<span class="hljs-number">1</span>)=<span class="hljs-number">0</span>;<br>s2(<span class="hljs-built_in">length</span>+<span class="hljs-number">1</span>)=<span class="hljs-number">0</span>;<br>a(<span class="hljs-built_in">length</span>+<span class="hljs-number">1</span>)=<span class="hljs-number">0</span>;<br>b(<span class="hljs-built_in">length</span>+<span class="hljs-number">1</span>)=<span class="hljs-number">0</span>;<br>nxi(<span class="hljs-built_in">length</span>+<span class="hljs-number">1</span>)=<span class="hljs-number">0</span>;<br><span class="hljs-comment">%读取数据</span><br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:<span class="hljs-built_in">length</span><br>    n(<span class="hljs-built_in">i</span>)=data(<span class="hljs-built_in">i</span>);<br><span class="hljs-keyword">end</span><br><span class="hljs-comment">%三次滑动平均</span><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">length</span>&lt;<span class="hljs-number">3</span><br>    <span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:<span class="hljs-built_in">length</span><br>        out_arr(<span class="hljs-built_in">i</span>)=n(<span class="hljs-built_in">i</span>);<span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><span class="hljs-comment">%我在这里把空缺值补全了</span><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">length</span>&gt;=<span class="hljs-number">3</span><br>    out_arr(<span class="hljs-number">1</span>)=(<span class="hljs-number">5</span>*n(<span class="hljs-number">1</span>)+<span class="hljs-number">2</span>*n(<span class="hljs-number">2</span>)-n(<span class="hljs-number">3</span>))/<span class="hljs-number">6</span>;<br>     <span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">2</span>:<span class="hljs-built_in">length</span><span class="hljs-number">-1</span><br>         out_arr(<span class="hljs-built_in">i</span>)=(n(<span class="hljs-built_in">i</span>)+n(<span class="hljs-built_in">i</span><span class="hljs-number">-1</span>)+n(<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>))/<span class="hljs-number">3</span>;<br>     <span class="hljs-keyword">end</span><br>     out_arr(<span class="hljs-built_in">length</span>)=(<span class="hljs-number">5</span>*n(<span class="hljs-built_in">length</span>)+<span class="hljs-number">2</span>*n(<span class="hljs-built_in">length</span><span class="hljs-number">-1</span>)-n(<span class="hljs-built_in">length</span><span class="hljs-number">-2</span>))/<span class="hljs-number">6</span>;   <br><span class="hljs-keyword">end</span><br><span class="hljs-built_in">disp</span>(out_arr);<br><span class="hljs-comment">%相除得到粗略季节系数</span><br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:<span class="hljs-built_in">length</span><br>    nxi(<span class="hljs-built_in">i</span>)=n(<span class="hljs-built_in">i</span>)/out_arr(<span class="hljs-built_in">i</span>);<br><span class="hljs-keyword">end</span><br><span class="hljs-comment">%校正</span><br>index=[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>];<br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:<span class="hljs-built_in">length</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">mod</span>(<span class="hljs-built_in">i</span>,<span class="hljs-number">4</span>)==<span class="hljs-number">1</span><br>        index(<span class="hljs-number">1</span>)=nxi(<span class="hljs-built_in">i</span>)+index(<span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">mod</span>(<span class="hljs-built_in">i</span>,<span class="hljs-number">4</span>)==<span class="hljs-number">2</span><br>        index(<span class="hljs-number">2</span>)=nxi(<span class="hljs-built_in">i</span>)+index(<span class="hljs-number">2</span>);<br>    <span class="hljs-keyword">end</span><br>        <br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">mod</span>(<span class="hljs-built_in">i</span>,<span class="hljs-number">4</span>)==<span class="hljs-number">3</span><br>        index(<span class="hljs-number">3</span>)=nxi(<span class="hljs-built_in">i</span>)+index(<span class="hljs-number">3</span>);<br>    <span class="hljs-keyword">end</span><br>     <span class="hljs-keyword">if</span> <span class="hljs-built_in">mod</span>(<span class="hljs-built_in">i</span>,<span class="hljs-number">4</span>)==<span class="hljs-number">0</span><br>        index(<span class="hljs-number">4</span>)=nxi(<span class="hljs-built_in">i</span>)+index(<span class="hljs-number">4</span>);<br>     <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:<span class="hljs-number">4</span><br>    index(<span class="hljs-built_in">i</span>)=index(<span class="hljs-built_in">i</span>)/sum(index)*<span class="hljs-number">4</span>;<br><span class="hljs-keyword">end</span><br><span class="hljs-built_in">disp</span>(<span class="hljs-string">&quot;校正后的季节性指标&quot;</span>)<br><span class="hljs-built_in">disp</span>(index);<br><span class="hljs-comment">%二次指数平滑</span><br><br>al=input(<span class="hljs-string">&quot;请输入权重下降速度alpha&quot;</span>);<br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">2</span>:<span class="hljs-built_in">length</span><br>   n(<span class="hljs-built_in">i</span>)=al*n(<span class="hljs-built_in">i</span>)+(<span class="hljs-number">1</span>-al)*n(<span class="hljs-built_in">i</span><span class="hljs-number">-1</span>);<br>   s1(<span class="hljs-built_in">i</span>)=n(<span class="hljs-built_in">i</span>);<br><span class="hljs-keyword">end</span><br><span class="hljs-built_in">disp</span>(s1);<br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">2</span>:<span class="hljs-built_in">length</span><br> n(<span class="hljs-built_in">i</span>)=al*n(<span class="hljs-built_in">i</span>)+(<span class="hljs-number">1</span>-al)*n(<span class="hljs-built_in">i</span><span class="hljs-number">-1</span>);<br>   s2(<span class="hljs-built_in">i</span>)=n(<span class="hljs-built_in">i</span>);<br><span class="hljs-keyword">end</span><br><span class="hljs-built_in">disp</span>(s2);<br><span class="hljs-comment">%求模型a_t,b_t</span><br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">2</span>:<span class="hljs-built_in">length</span><br>    a(<span class="hljs-built_in">i</span>)=<span class="hljs-number">2</span>*s1(<span class="hljs-built_in">i</span>)-s2(<span class="hljs-built_in">i</span>);<br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">2</span>:<span class="hljs-built_in">length</span><br>    b(<span class="hljs-built_in">i</span>)=al/(<span class="hljs-number">1</span>-al)*(s1(<span class="hljs-built_in">i</span>)-s2(<span class="hljs-built_in">i</span>));<br><span class="hljs-keyword">end</span><br><span class="hljs-built_in">disp</span>(<span class="hljs-string">&quot;a的值为&quot;</span>)<br><span class="hljs-built_in">disp</span>(a);<br><span class="hljs-built_in">disp</span>(<span class="hljs-string">&quot;b的值为&quot;</span>)<br><span class="hljs-built_in">disp</span>(b);<br>k=input(<span class="hljs-string">&quot;请输入预测的数据长度&quot;</span>);<br><span class="hljs-built_in">disp</span>(<span class="hljs-string">&quot;预测值为&quot;</span>)<br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:k<br>x=<span class="hljs-built_in">mod</span>(<span class="hljs-built_in">i</span>,<span class="hljs-number">4</span>);<br><span class="hljs-keyword">if</span> x==<span class="hljs-number">0</span><br>  <span class="hljs-built_in">disp</span>((a(<span class="hljs-built_in">length</span>)+b(<span class="hljs-built_in">length</span>)*<span class="hljs-built_in">i</span>)*index(<span class="hljs-number">4</span>));<br><span class="hljs-keyword">else</span><br>    <span class="hljs-built_in">disp</span>((a(<span class="hljs-built_in">length</span>)+b(<span class="hljs-built_in">length</span>)*<span class="hljs-built_in">i</span>)*index(x));<br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h1 id="C-实现季节变动预测"><a href="#C-实现季节变动预测" class="headerlink" title="C#实现季节变动预测"></a>C#实现季节变动预测</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs C">Console.WriteLine(<span class="hljs-string">&quot;请输入数据长度&quot;</span>);<br><span class="hljs-type">int</span> length = Convert.ToInt32(Console.ReadLine());<br><span class="hljs-type">double</span>[] n = new <span class="hljs-type">double</span>[length];<br><span class="hljs-type">double</span>[] nxi = new <span class="hljs-type">double</span>[length];<span class="hljs-comment">/*季节系数*/</span><br><br>Console.WriteLine(<span class="hljs-string">&quot;请输入所有数据&quot;</span>);<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; length; i++)<br>&#123;<br>    n[i] = Convert.ToDouble(Console.ReadLine());<br>&#125;<br><span class="hljs-comment">/*  求三次滑动平均3*/</span><br><br><br> <span class="hljs-type">double</span>[] linearSmooth3(<span class="hljs-type">double</span>[] in_arr, <span class="hljs-type">int</span> N)<br>&#123;<br>    <span class="hljs-type">double</span>[] out_arr = new <span class="hljs-type">double</span>[in_arr.Length];<br>    <span class="hljs-type">int</span> i; <span class="hljs-keyword">if</span> (N &lt; <span class="hljs-number">3</span>)<br>    &#123;<br>        <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt;= N - <span class="hljs-number">1</span>; i++) &#123; out_arr[i] = in_arr[i]; &#125;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        out_arr[<span class="hljs-number">0</span>] = (<span class="hljs-number">5.0</span> * in_arr[<span class="hljs-number">0</span>] + <span class="hljs-number">2.0</span> * in_arr[<span class="hljs-number">1</span>] - in_arr[<span class="hljs-number">2</span>]) / <span class="hljs-number">6.0</span>;<br>        <span class="hljs-keyword">for</span> (i = <span class="hljs-number">1</span>; i &lt;= N - <span class="hljs-number">2</span>; i++) &#123; out_arr[i] = (in_arr[i - <span class="hljs-number">1</span>] + in_arr[i] + in_arr[i + <span class="hljs-number">1</span>]) / <span class="hljs-number">3.0</span>; &#125;<br>        out_arr[N - <span class="hljs-number">1</span>] = (<span class="hljs-number">5.0</span> * in_arr[N - <span class="hljs-number">1</span>] + <span class="hljs-number">2.0</span> * in_arr[N - <span class="hljs-number">2</span>] - in_arr[N - <span class="hljs-number">3</span>]) / <span class="hljs-number">6.0</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> out_arr;<br>&#125;<br><br>Console.WriteLine(<span class="hljs-string">&quot;这里是初步的季节系数&quot;</span>);<br><span class="hljs-comment">/*原数据除滑动平均数据*/</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n.Length; i++) &#123;<br>    Console.WriteLine(linearSmooth3(n, <span class="hljs-number">12</span>)[i]);<br>    nxi[i]=n[i] / linearSmooth3(n, <span class="hljs-number">12</span>)[i];<br>    Console.WriteLine(nxi[i]);<br><br>&#125;<br><span class="hljs-comment">/*季节性指标*/</span><br><span class="hljs-type">double</span> spring = nxi[<span class="hljs-number">0</span>] + nxi[<span class="hljs-number">4</span>] + nxi[<span class="hljs-number">8</span>];<br><span class="hljs-type">double</span> summer = nxi[<span class="hljs-number">1</span>] + nxi[<span class="hljs-number">5</span>] + nxi[<span class="hljs-number">9</span>];<br><span class="hljs-type">double</span> fall = nxi[<span class="hljs-number">2</span>] + nxi[<span class="hljs-number">6</span>] + nxi[<span class="hljs-number">10</span>];<br><span class="hljs-type">double</span> winter = nxi[<span class="hljs-number">3</span>] + nxi[<span class="hljs-number">7</span>] + nxi[<span class="hljs-number">11</span>];<br><span class="hljs-comment">/* 校正*/</span><br>Console.WriteLine(<span class="hljs-string">&quot;这里是校正后的季节指标&quot;</span>);<br><span class="hljs-type">double</span> sum=spring+summer+fall+winter;<br><span class="hljs-type">double</span> []index=new <span class="hljs-type">double</span>[n.Length];<br>index[<span class="hljs-number">0</span>] = spring / sum * <span class="hljs-number">4</span>;<br>index[<span class="hljs-number">1</span>]  = summer / sum * <span class="hljs-number">4</span>;<br>index[<span class="hljs-number">2</span>]= fall / sum * <span class="hljs-number">4</span>;<br>index[<span class="hljs-number">3</span>] = winter / sum*<span class="hljs-number">4</span>;<br>Console.WriteLine($<span class="hljs-string">&quot;&#123; index[0]&#125;,&#123; index[1]&#125;,&#123; index[2]&#125;,&#123; index[3]&#125;&quot;</span>);<br>Console.WriteLine(<span class="hljs-string">&quot;请输入权重下降的速度alpha&quot;</span>);<br><span class="hljs-type">double</span> alpha=Convert.ToDouble(Console.ReadLine());<br>Console.WriteLine(<span class="hljs-string">&quot;一次指数平滑&quot;</span>);<br><span class="hljs-comment">/*一次指数平滑*/</span><br><span class="hljs-type">double</span>[] n1=new <span class="hljs-type">double</span>[length];<br><span class="hljs-type">double</span>[] n2 = new <span class="hljs-type">double</span>[length];<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; length; i++)<br>&#123;<br>    n[i] =(<span class="hljs-number">1</span>-alpha)* n[i<span class="hljs-number">-1</span>] + (alpha) * n[i];<br>    n1[i] = n[i];<br>    Console.WriteLine($<span class="hljs-string">&quot;&#123;n[i]&#125;&quot;</span>);<br>&#125;<br><span class="hljs-comment">/*二次*/</span><br>Console.WriteLine(<span class="hljs-string">&quot;二次指数平滑&quot;</span>);<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; length; i++)<br>&#123;<br>    n[i] = (<span class="hljs-number">1</span> - alpha) * n[i - <span class="hljs-number">1</span>] + (alpha) * n[i];<br>    Console.WriteLine($<span class="hljs-string">&quot;&#123;n[i]&#125;&quot;</span>);<br>    n2[i] = n[i];<br>&#125;<br><span class="hljs-comment">/*模型的a,b*/</span><br>Console.WriteLine(<span class="hljs-string">&quot;模型的a,b&quot;</span>);<br><span class="hljs-type">double</span> a=<span class="hljs-number">2</span>*n1[length<span class="hljs-number">-1</span>]-n2[length<span class="hljs-number">-1</span>];<br><span class="hljs-type">double</span> b=alpha/(<span class="hljs-number">1</span>-alpha)*(n1[length<span class="hljs-number">-1</span>]-n2[length<span class="hljs-number">-1</span>]);<br>Console.WriteLine($<span class="hljs-string">&quot;&#123;a&#125;and&#123;b&#125;&quot;</span>);<br><span class="hljs-comment">/*预测*/</span><br>Console.WriteLine(<span class="hljs-string">&quot;请输入您将要往后预测的阶段数k&quot;</span>);<br><span class="hljs-type">double</span> k = Convert.ToDouble(Console.ReadLine());<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; k+<span class="hljs-number">1</span>; i++) &#123;<br>    <span class="hljs-type">double</span> y = (a + b * i) * index[(i<span class="hljs-number">-1</span>) % <span class="hljs-number">4</span>];<br>    Console.WriteLine(y);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Determining nitrogen deficiencies for maize</title>
    <link href="/innov2/"/>
    <url>/innov2/</url>
    
    <content type="html"><![CDATA[<h2 id="Determining-nitrogen-deficiencies-for-maize-using-various-remote-sensing-indices"><a href="#Determining-nitrogen-deficiencies-for-maize-using-various-remote-sensing-indices" class="headerlink" title="Determining nitrogen deficiencies for maize using various remote sensing indices"></a>Determining nitrogen deficiencies for maize using various remote sensing indices</h2><h3 id="核心思想："><a href="#核心思想：" class="headerlink" title="核心思想："></a><strong>核心思想</strong>：</h3><ol><li>建立VI-(stage,N-rate)多元线性回归模型，将VI和相应的stage代入VI-(stage,N-rate)多元线性回归模型得N-rate——&gt;N-recommendation，指导生产</li><li>建立 VI-yeild(植被指数-产量)线性回归方程,通过不同时期的VI预测产量<h3 id="背景："><a href="#背景：" class="headerlink" title="背景："></a><strong>背景</strong>：</h3>N-rates： are established using two factors:<strong>maize grain yield goal</strong> and <strong>soil texture</strong>. 氮肥的比率，在阿肯色州247 $kg N\cdot  ha^{-1}$是100%，它和土壤质地共同影响最后的产量。换句话说，你可以根据土壤质地和目标产量确定你应该施肥的N_rate</li></ol><p>N-recommendations based on conventional systems may not be applicable under the agricultural practices of <strong>no- or minimal tillage</strong>, <strong>winter cover crops</strong> and/or <strong>diverse crop rotations</strong>.这篇论文是在荒地、冬季覆土作物和其他各种各样的轮作上研究 N-recommendation</p><h3 id="研究变量"><a href="#研究变量" class="headerlink" title="研究变量"></a><strong>研究变量</strong></h3><p>  <strong>nitrogen fertilizer rates</strong><br>  <strong>maize grain yield</strong><br>   <strong>maize growth stage</strong><br>   <strong>vegetation indices</strong><br> 研究N-rate、玉米作物产量、玉米生长时期、植被指数四个变量的关系</p><h2 id="目的："><a href="#目的：" class="headerlink" title="目的："></a>目的：</h2><p>(i) the <strong>strengths and weaknesses of vegetation indices</strong> in detecting nitrogen fertilizer treatments,<br>植被指数能不能很好地检测判断N-rate氮肥的施肥方式？<br>(ii) <strong>the effect of maize growth stage</strong> on the relationship between vegetation index and nitrogen treatment<br>不同的玉米生长时期对VI和N-rate的关系的影响<br>或：VI和N-rate的关系随着玉米生长时期的不同有何变化<br>(iii) the power of vegetation indices for <strong>predicting maize grain yield</strong> during vegetative and reproductive growth stages.<br>在vegetative和reproductive期间测定的植被指数，能多大程度上预测最终玉米产量。</p><h3 id="选择maize-growth-stage"><a href="#选择maize-growth-stage" class="headerlink" title="选择maize growth stage"></a>选择maize growth stage</h3><p>选择的玉米生长时期是between the <strong>V6</strong> (six true, collared leaves)and <strong>R4</strong> (dough formation) growth stages<br>原因：其他阶段不怎么吸收N，中后期植被覆盖和叶子变多，降低了土壤影响。65% of total N-uptake occurs between V6 and vegetative tasseling (VT) Approximately 20% of maize nitrogen demand is satisfied between VT and R3 (milk-like liquid present in kernels)</p><div class="table-container"><table><thead><tr><th>Vegetative growth stages</th><th></th><th>Reproductive growth stages</th><th></th></tr></thead><tbody><tr><td>VE</td><td>emergence</td><td>R1</td><td>silking</td></tr><tr><td>V1</td><td>a first leaf</td><td>R2</td><td>blister</td></tr><tr><td>V2</td><td>second leaf</td><td>R3</td><td>milk</td></tr><tr><td>V3</td><td>third leaf</td><td>R4</td><td>dough</td></tr><tr><td>V(n)</td><td>nth leaf</td><td>R5</td><td>dent</td></tr><tr><td>VT</td><td>tasseling</td><td>R6</td><td>physiological maturity</td></tr></tbody></table></div><h2 id="统计方法"><a href="#统计方法" class="headerlink" title="统计方法"></a>统计方法</h2><h3 id="一、线性回归"><a href="#一、线性回归" class="headerlink" title="一、线性回归"></a>一、线性回归</h3><blockquote><p>Arcgis求每个plot的平均植被指数。<br><img src="/innov2/arcgis.png" class=""></p></blockquote><p>多元线性回归模型（VI&lt;-(stage,N-rate)）</p><img src="/innov2/eq1.jpg" class=""><p>$Y_i$ is the index value, $x_{iN−rate} $is the nitrogen rate and $x_{istage}$ is the growth stage<br>简单线性回归：因为stage和VI有较大的相关性，所以下面只是分析VI和N-rate对yield的影响<br><img src="/innov2/eq2.jpg" class=""></p><p>$y_i$ is the maize grain yield and $x_{iindex}$ is the index value.</p><h3 id="二、Saturation-analysis饱和点分析："><a href="#二、Saturation-analysis饱和点分析：" class="headerlink" title="二、Saturation analysis饱和点分析："></a>二、Saturation analysis饱和点分析：</h3><p>加大N-rate至产量不再变化，这个N-rate就是作物的饱和点，我们需要找到这个饱和点，如果VI和产量在同一N-rate处达到饱和，我们可以用这个VI的饱和点来确定作物的饱和点。</p><img src="/innov2/eq3.jpg" class=""><img src="/innov2/eq4.jpg" class="">]]></content>
    
    
    <categories>
      
      <category>UAV&amp;RS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
