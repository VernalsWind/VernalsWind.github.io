<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>R语言</title>
    <link href="/%E6%B5%8B%E8%AF%95/"/>
    <url>/%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<p><a href="R空间自相关的变异函数.html">R空间自相关的变异函数</a><br><a href="聚类.html">聚类分析总结</a><br><a href="RPubs - 多元统计分析.html">R多元统计分析</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>R语言</title>
    <link href="/stasticR/"/>
    <url>/stasticR/</url>
    
    <content type="html"><![CDATA[<p><a href="R空间自相关的变异函数.html">R空间自相关的变异函数</a><br><a href="聚类.html">聚类分析总结</a><br><a href="RPubs - 多元统计分析.html">R多元统计分析</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2020013199</title>
    <link href="/numeric/"/>
    <url>/numeric/</url>
    
    <content type="html"><![CDATA[<figure class="highlight matlab"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></div></td><td class="code"><pre><code class="hljs matlab">h=input(<span class="hljs-string">&#x27;请输入步长&#x27;</span>);<br>[x,u]=pro1(h);<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">d</span>=<span class="hljs-title">f</span><span class="hljs-params">(x,u)</span></span><br>d=<span class="hljs-built_in">exp</span>(x)<span class="hljs-number">-100</span>*u;<br><span class="hljs-keyword">end</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">[x,u]</span> = <span class="hljs-title">pro1</span><span class="hljs-params">(h)</span></span><br>x1=<span class="hljs-number">0</span>;<br>x2=<span class="hljs-number">1</span>;<br>u1=<span class="hljs-number">1</span>;<br><br>N=<span class="hljs-built_in">abs</span>(x2-x1)/h;<br>u=<span class="hljs-built_in">zeros</span>(N+<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br>up=<span class="hljs-built_in">zeros</span>(N+<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br>x=<span class="hljs-built_in">zeros</span>(N+<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br>u(<span class="hljs-number">1</span>)=u1;<br>up(<span class="hljs-number">1</span>)=u1;<br>x(<span class="hljs-number">1</span>)=x1;<br><br> <span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span> = <span class="hljs-number">1</span>:N<br>    up(<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>)=u(<span class="hljs-built_in">i</span>)+f(x(<span class="hljs-built_in">i</span>),u(<span class="hljs-built_in">i</span>))*h;<br>    uc=u(<span class="hljs-built_in">i</span>)+f(x(<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>),up(<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>))*h;<br>    u(<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>)=(uc+up(<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>))/<span class="hljs-number">2</span>;<br>    x(<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>)=x(<span class="hljs-built_in">i</span>)+h;<br>    <span class="hljs-built_in">disp</span>(u(<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>));<br> <span class="hljs-keyword">end</span><br>syms z(t);  <br><br><br>ys=dsolve(diff(z,t)==<span class="hljs-built_in">exp</span>(t)<span class="hljs-number">-100</span>*z,z(<span class="hljs-number">0</span>)==<span class="hljs-number">1</span>);<br><span class="hljs-built_in">disp</span>(ys)<br>subplot(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>);<br><span class="hljs-built_in">plot</span>(x,u);<br>ylabel(<span class="hljs-string">&#x27;改进Euler&#x27;</span>);<br>title(<span class="hljs-string">&#x27;改进Euler函数&#x27;</span>);<br>subplot(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>);<br><span class="hljs-built_in">plot</span>(x,up);<br>ylabel(<span class="hljs-string">&#x27;Euler&#x27;</span>);<br>title(<span class="hljs-string">&#x27;Euler函数&#x27;</span>);<br>subplot(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>);<br><span class="hljs-built_in">plot</span>(u,up);<br><br><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><img src="/numeric/%E6%AC%A7%E6%8B%891.jpg" class="" title="结果1"><img src="/numeric/euler2.jpg" class="" title="结果2">]]></content>
    
    
    <categories>
      
      <category>matlab</category>
      
    </categories>
    
    
    <tags>
      
      <tag>study</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>季节变动预测大作业</title>
    <link href="/timeseries/"/>
    <url>/timeseries/</url>
    
    <content type="html"><![CDATA[<h2 id="吴蒙蔚"><a href="#吴蒙蔚" class="headerlink" title="吴蒙蔚"></a>吴蒙蔚</h2><h2 id="Matlab实现季节变动预测"><a href="#Matlab实现季节变动预测" class="headerlink" title="Matlab实现季节变动预测"></a>Matlab实现季节变动预测</h2><figure class="highlight matlab"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></div></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-built_in">length</span>=input(<span class="hljs-string">&#x27;please input data length&#x27;</span>);<br>data=input(<span class="hljs-string">&#x27;please input data&#x27;</span>);<br>out_arr(<span class="hljs-built_in">length</span>+<span class="hljs-number">1</span>)=<span class="hljs-number">0</span>;<br>data(<span class="hljs-built_in">length</span>+<span class="hljs-number">1</span>)=<span class="hljs-number">0</span>;<br>n(<span class="hljs-built_in">length</span>+<span class="hljs-number">1</span>)=<span class="hljs-number">0</span>;<br>s1(<span class="hljs-built_in">length</span>+<span class="hljs-number">1</span>)=<span class="hljs-number">0</span>;<br>s2(<span class="hljs-built_in">length</span>+<span class="hljs-number">1</span>)=<span class="hljs-number">0</span>;<br>a(<span class="hljs-built_in">length</span>+<span class="hljs-number">1</span>)=<span class="hljs-number">0</span>;<br>b(<span class="hljs-built_in">length</span>+<span class="hljs-number">1</span>)=<span class="hljs-number">0</span>;<br>nxi(<span class="hljs-built_in">length</span>+<span class="hljs-number">1</span>)=<span class="hljs-number">0</span>;<br><span class="hljs-comment">%读取数据</span><br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:<span class="hljs-built_in">length</span><br>    n(<span class="hljs-built_in">i</span>)=data(<span class="hljs-built_in">i</span>);<br><span class="hljs-keyword">end</span><br><span class="hljs-comment">%三次滑动平均</span><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">length</span>&lt;<span class="hljs-number">3</span><br>    <span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:<span class="hljs-built_in">length</span><br>        out_arr(<span class="hljs-built_in">i</span>)=n(<span class="hljs-built_in">i</span>);<span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><span class="hljs-comment">%我在这里把空缺值补全了</span><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">length</span>&gt;=<span class="hljs-number">3</span><br>    out_arr(<span class="hljs-number">1</span>)=(<span class="hljs-number">5</span>*n(<span class="hljs-number">1</span>)+<span class="hljs-number">2</span>*n(<span class="hljs-number">2</span>)-n(<span class="hljs-number">3</span>))/<span class="hljs-number">6</span>;<br>     <span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">2</span>:<span class="hljs-built_in">length</span><span class="hljs-number">-1</span><br>         out_arr(<span class="hljs-built_in">i</span>)=(n(<span class="hljs-built_in">i</span>)+n(<span class="hljs-built_in">i</span><span class="hljs-number">-1</span>)+n(<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>))/<span class="hljs-number">3</span>;<br>     <span class="hljs-keyword">end</span><br>     out_arr(<span class="hljs-built_in">length</span>)=(<span class="hljs-number">5</span>*n(<span class="hljs-built_in">length</span>)+<span class="hljs-number">2</span>*n(<span class="hljs-built_in">length</span><span class="hljs-number">-1</span>)-n(<span class="hljs-built_in">length</span><span class="hljs-number">-2</span>))/<span class="hljs-number">6</span>;   <br><span class="hljs-keyword">end</span><br><span class="hljs-built_in">disp</span>(out_arr);<br><span class="hljs-comment">%相除得到粗略季节系数</span><br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:<span class="hljs-built_in">length</span><br>    nxi(<span class="hljs-built_in">i</span>)=n(<span class="hljs-built_in">i</span>)/out_arr(<span class="hljs-built_in">i</span>);<br><span class="hljs-keyword">end</span><br><span class="hljs-comment">%校正</span><br>index=[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>];<br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:<span class="hljs-built_in">length</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">mod</span>(<span class="hljs-built_in">i</span>,<span class="hljs-number">4</span>)==<span class="hljs-number">1</span><br>        index(<span class="hljs-number">1</span>)=nxi(<span class="hljs-built_in">i</span>)+index(<span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">mod</span>(<span class="hljs-built_in">i</span>,<span class="hljs-number">4</span>)==<span class="hljs-number">2</span><br>        index(<span class="hljs-number">2</span>)=nxi(<span class="hljs-built_in">i</span>)+index(<span class="hljs-number">2</span>);<br>    <span class="hljs-keyword">end</span><br>        <br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">mod</span>(<span class="hljs-built_in">i</span>,<span class="hljs-number">4</span>)==<span class="hljs-number">3</span><br>        index(<span class="hljs-number">3</span>)=nxi(<span class="hljs-built_in">i</span>)+index(<span class="hljs-number">3</span>);<br>    <span class="hljs-keyword">end</span><br>     <span class="hljs-keyword">if</span> <span class="hljs-built_in">mod</span>(<span class="hljs-built_in">i</span>,<span class="hljs-number">4</span>)==<span class="hljs-number">0</span><br>        index(<span class="hljs-number">4</span>)=nxi(<span class="hljs-built_in">i</span>)+index(<span class="hljs-number">4</span>);<br>     <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:<span class="hljs-number">4</span><br>    index(<span class="hljs-built_in">i</span>)=index(<span class="hljs-built_in">i</span>)/sum(index)*<span class="hljs-number">4</span>;<br><span class="hljs-keyword">end</span><br><span class="hljs-built_in">disp</span>(<span class="hljs-string">&quot;校正后的季节性指标&quot;</span>)<br><span class="hljs-built_in">disp</span>(index);<br><span class="hljs-comment">%二次指数平滑</span><br><br>al=input(<span class="hljs-string">&quot;请输入权重下降速度alpha&quot;</span>);<br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">2</span>:<span class="hljs-built_in">length</span><br>   n(<span class="hljs-built_in">i</span>)=al*n(<span class="hljs-built_in">i</span>)+(<span class="hljs-number">1</span>-al)*n(<span class="hljs-built_in">i</span><span class="hljs-number">-1</span>);<br>   s1(<span class="hljs-built_in">i</span>)=n(<span class="hljs-built_in">i</span>);<br><span class="hljs-keyword">end</span><br><span class="hljs-built_in">disp</span>(s1);<br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">2</span>:<span class="hljs-built_in">length</span><br> n(<span class="hljs-built_in">i</span>)=al*n(<span class="hljs-built_in">i</span>)+(<span class="hljs-number">1</span>-al)*n(<span class="hljs-built_in">i</span><span class="hljs-number">-1</span>);<br>   s2(<span class="hljs-built_in">i</span>)=n(<span class="hljs-built_in">i</span>);<br><span class="hljs-keyword">end</span><br><span class="hljs-built_in">disp</span>(s2);<br><span class="hljs-comment">%求模型a_t,b_t</span><br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">2</span>:<span class="hljs-built_in">length</span><br>    a(<span class="hljs-built_in">i</span>)=<span class="hljs-number">2</span>*s1(<span class="hljs-built_in">i</span>)-s2(<span class="hljs-built_in">i</span>);<br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">2</span>:<span class="hljs-built_in">length</span><br>    b(<span class="hljs-built_in">i</span>)=al/(<span class="hljs-number">1</span>-al)*(s1(<span class="hljs-built_in">i</span>)-s2(<span class="hljs-built_in">i</span>));<br><span class="hljs-keyword">end</span><br><span class="hljs-built_in">disp</span>(<span class="hljs-string">&quot;a的值为&quot;</span>)<br><span class="hljs-built_in">disp</span>(a);<br><span class="hljs-built_in">disp</span>(<span class="hljs-string">&quot;b的值为&quot;</span>)<br><span class="hljs-built_in">disp</span>(b);<br>k=input(<span class="hljs-string">&quot;请输入预测的数据长度&quot;</span>);<br><span class="hljs-built_in">disp</span>(<span class="hljs-string">&quot;预测值为&quot;</span>)<br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:k<br>x=<span class="hljs-built_in">mod</span>(<span class="hljs-built_in">i</span>,<span class="hljs-number">4</span>);<br><span class="hljs-keyword">if</span> x==<span class="hljs-number">0</span><br>  <span class="hljs-built_in">disp</span>((a(<span class="hljs-built_in">length</span>)+b(<span class="hljs-built_in">length</span>)*<span class="hljs-built_in">i</span>)*index(<span class="hljs-number">4</span>));<br><span class="hljs-keyword">else</span><br>    <span class="hljs-built_in">disp</span>((a(<span class="hljs-built_in">length</span>)+b(<span class="hljs-built_in">length</span>)*<span class="hljs-built_in">i</span>)*index(x));<br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h1 id="C-实现季节变动预测"><a href="#C-实现季节变动预测" class="headerlink" title="C#实现季节变动预测"></a>C#实现季节变动预测</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs C">Console.WriteLine(<span class="hljs-string">&quot;请输入数据长度&quot;</span>);<br><span class="hljs-type">int</span> length = Convert.ToInt32(Console.ReadLine());<br><span class="hljs-type">double</span>[] n = new <span class="hljs-type">double</span>[length];<br><span class="hljs-type">double</span>[] nxi = new <span class="hljs-type">double</span>[length];<span class="hljs-comment">/*季节系数*/</span><br><br>Console.WriteLine(<span class="hljs-string">&quot;请输入所有数据&quot;</span>);<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; length; i++)<br>&#123;<br>    n[i] = Convert.ToDouble(Console.ReadLine());<br>&#125;<br><span class="hljs-comment">/*  求三次滑动平均3*/</span><br><br><br> <span class="hljs-type">double</span>[] linearSmooth3(<span class="hljs-type">double</span>[] in_arr, <span class="hljs-type">int</span> N)<br>&#123;<br>    <span class="hljs-type">double</span>[] out_arr = new <span class="hljs-type">double</span>[in_arr.Length];<br>    <span class="hljs-type">int</span> i; <span class="hljs-keyword">if</span> (N &lt; <span class="hljs-number">3</span>)<br>    &#123;<br>        <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt;= N - <span class="hljs-number">1</span>; i++) &#123; out_arr[i] = in_arr[i]; &#125;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        out_arr[<span class="hljs-number">0</span>] = (<span class="hljs-number">5.0</span> * in_arr[<span class="hljs-number">0</span>] + <span class="hljs-number">2.0</span> * in_arr[<span class="hljs-number">1</span>] - in_arr[<span class="hljs-number">2</span>]) / <span class="hljs-number">6.0</span>;<br>        <span class="hljs-keyword">for</span> (i = <span class="hljs-number">1</span>; i &lt;= N - <span class="hljs-number">2</span>; i++) &#123; out_arr[i] = (in_arr[i - <span class="hljs-number">1</span>] + in_arr[i] + in_arr[i + <span class="hljs-number">1</span>]) / <span class="hljs-number">3.0</span>; &#125;<br>        out_arr[N - <span class="hljs-number">1</span>] = (<span class="hljs-number">5.0</span> * in_arr[N - <span class="hljs-number">1</span>] + <span class="hljs-number">2.0</span> * in_arr[N - <span class="hljs-number">2</span>] - in_arr[N - <span class="hljs-number">3</span>]) / <span class="hljs-number">6.0</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> out_arr;<br>&#125;<br><br>Console.WriteLine(<span class="hljs-string">&quot;这里是初步的季节系数&quot;</span>);<br><span class="hljs-comment">/*原数据除滑动平均数据*/</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n.Length; i++) &#123;<br>    Console.WriteLine(linearSmooth3(n, <span class="hljs-number">12</span>)[i]);<br>    nxi[i]=n[i] / linearSmooth3(n, <span class="hljs-number">12</span>)[i];<br>    Console.WriteLine(nxi[i]);<br><br>&#125;<br><span class="hljs-comment">/*季节性指标*/</span><br><span class="hljs-type">double</span> spring = nxi[<span class="hljs-number">0</span>] + nxi[<span class="hljs-number">4</span>] + nxi[<span class="hljs-number">8</span>];<br><span class="hljs-type">double</span> summer = nxi[<span class="hljs-number">1</span>] + nxi[<span class="hljs-number">5</span>] + nxi[<span class="hljs-number">9</span>];<br><span class="hljs-type">double</span> fall = nxi[<span class="hljs-number">2</span>] + nxi[<span class="hljs-number">6</span>] + nxi[<span class="hljs-number">10</span>];<br><span class="hljs-type">double</span> winter = nxi[<span class="hljs-number">3</span>] + nxi[<span class="hljs-number">7</span>] + nxi[<span class="hljs-number">11</span>];<br><span class="hljs-comment">/* 校正*/</span><br>Console.WriteLine(<span class="hljs-string">&quot;这里是校正后的季节指标&quot;</span>);<br><span class="hljs-type">double</span> sum=spring+summer+fall+winter;<br><span class="hljs-type">double</span> []index=new <span class="hljs-type">double</span>[n.Length];<br>index[<span class="hljs-number">0</span>] = spring / sum * <span class="hljs-number">4</span>;<br>index[<span class="hljs-number">1</span>]  = summer / sum * <span class="hljs-number">4</span>;<br>index[<span class="hljs-number">2</span>]= fall / sum * <span class="hljs-number">4</span>;<br>index[<span class="hljs-number">3</span>] = winter / sum*<span class="hljs-number">4</span>;<br>Console.WriteLine($<span class="hljs-string">&quot;&#123; index[0]&#125;,&#123; index[1]&#125;,&#123; index[2]&#125;,&#123; index[3]&#125;&quot;</span>);<br>Console.WriteLine(<span class="hljs-string">&quot;请输入权重下降的速度alpha&quot;</span>);<br><span class="hljs-type">double</span> alpha=Convert.ToDouble(Console.ReadLine());<br>Console.WriteLine(<span class="hljs-string">&quot;一次指数平滑&quot;</span>);<br><span class="hljs-comment">/*一次指数平滑*/</span><br><span class="hljs-type">double</span>[] n1=new <span class="hljs-type">double</span>[length];<br><span class="hljs-type">double</span>[] n2 = new <span class="hljs-type">double</span>[length];<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; length; i++)<br>&#123;<br>    n[i] =(<span class="hljs-number">1</span>-alpha)* n[i<span class="hljs-number">-1</span>] + (alpha) * n[i];<br>    n1[i] = n[i];<br>    Console.WriteLine($<span class="hljs-string">&quot;&#123;n[i]&#125;&quot;</span>);<br>&#125;<br><span class="hljs-comment">/*二次*/</span><br>Console.WriteLine(<span class="hljs-string">&quot;二次指数平滑&quot;</span>);<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; length; i++)<br>&#123;<br>    n[i] = (<span class="hljs-number">1</span> - alpha) * n[i - <span class="hljs-number">1</span>] + (alpha) * n[i];<br>    Console.WriteLine($<span class="hljs-string">&quot;&#123;n[i]&#125;&quot;</span>);<br>    n2[i] = n[i];<br>&#125;<br><span class="hljs-comment">/*模型的a,b*/</span><br>Console.WriteLine(<span class="hljs-string">&quot;模型的a,b&quot;</span>);<br><span class="hljs-type">double</span> a=<span class="hljs-number">2</span>*n1[length<span class="hljs-number">-1</span>]-n2[length<span class="hljs-number">-1</span>];<br><span class="hljs-type">double</span> b=alpha/(<span class="hljs-number">1</span>-alpha)*(n1[length<span class="hljs-number">-1</span>]-n2[length<span class="hljs-number">-1</span>]);<br>Console.WriteLine($<span class="hljs-string">&quot;&#123;a&#125;and&#123;b&#125;&quot;</span>);<br><span class="hljs-comment">/*预测*/</span><br>Console.WriteLine(<span class="hljs-string">&quot;请输入您将要往后预测的阶段数k&quot;</span>);<br><span class="hljs-type">double</span> k = Convert.ToDouble(Console.ReadLine());<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; k+<span class="hljs-number">1</span>; i++) &#123;<br>    <span class="hljs-type">double</span> y = (a + b * i) * index[(i<span class="hljs-number">-1</span>) % <span class="hljs-number">4</span>];<br>    Console.WriteLine(y);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>论文</title>
    <link href="/project/"/>
    <url>/project/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="a22d6ad3161afa2cf07e3a6da9b79d647a9c363b57d48e746733aeed8c158ec0"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>UAV&amp;RS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Determining nitrogen deficiencies for maize</title>
    <link href="/innov2/"/>
    <url>/innov2/</url>
    
    <content type="html"><![CDATA[<h2 id="Determining-nitrogen-deficiencies-for-maize-using-various-remote-sensing-indices"><a href="#Determining-nitrogen-deficiencies-for-maize-using-various-remote-sensing-indices" class="headerlink" title="Determining nitrogen deficiencies for maize using various remote sensing indices"></a>Determining nitrogen deficiencies for maize using various remote sensing indices</h2><h3 id="核心思想："><a href="#核心思想：" class="headerlink" title="核心思想："></a><strong>核心思想</strong>：</h3><ol><li>建立VI-(stage,N-rate)多元线性回归模型，将VI和相应的stage代入VI-(stage,N-rate)多元线性回归模型得N-rate——&gt;N-recommendations，指导生产</li><li>建立 VI-yeild(植被指数-产量)线性回归方程,通过不同时期的VI预测产量<h3 id="背景："><a href="#背景：" class="headerlink" title="背景："></a><strong>背景</strong>：</h3>N-rates： are established using two factors:<strong>maize grain yield goal</strong> and <strong>soil texture</strong>. 氮肥的比率，在阿肯色州247 $kg N\cdot  ha^{-1}$是100%，它和土壤质地共同影响最后的产量。换句话说，你可以根据土壤质地和目标产量确定你应该施肥的N_rate</li></ol><p>N-recommendations based on conventional systems may not be applicable under the agricultural practices of <strong>no- or minimal tillage</strong>, <strong>winter cover crops</strong> and/or <strong>diverse crop rotations</strong>.这篇论文是在荒地、冬季覆土作物和其他各种各样的轮作上研究 N-recommendation</p><h3 id="研究变量"><a href="#研究变量" class="headerlink" title="研究变量"></a><strong>研究变量</strong></h3><p>  <strong>nitrogen fertilizer rates</strong><br>  <strong>maize grain yield</strong><br>   <strong>maize growth stage</strong><br>   <strong>vegetation indices</strong><br> 研究N-rate、玉米作物产量、玉米生长时期、植被指数四个变量的关系</p><h2 id="目的："><a href="#目的：" class="headerlink" title="目的："></a>目的：</h2><p>(i) the <strong>strengths and weaknesses of vegetation indices</strong> in detecting nitrogen fertilizer treatments,<br>植被指数能不能很好地检测判断N-rate氮肥的施肥方式？<br>(ii) <strong>the effect of maize growth stage</strong> on the relationship between vegetation index and nitrogen treatment<br>不同的玉米生长时期对VI和N-rate的关系的影响<br>或：VI和N-rate的关系随着玉米生长时期的不同有何变化<br>(iii) the power of vegetation indices for <strong>predicting maize grain yield</strong> during vegetative and reproductive growth stages.<br>在vegetative和reproductive期间测定的植被指数，能多大程度上预测最终玉米产量。</p><h3 id="选择maize-growth-stage"><a href="#选择maize-growth-stage" class="headerlink" title="选择maize growth stage"></a>选择maize growth stage</h3><p>选择的玉米生长时期是between the <strong>V6</strong> (six true, collared leaves)and <strong>R4</strong> (dough formation) growth stages<br>原因：其他阶段不怎么吸收N，中后期植被覆盖和叶子变多，降低了土壤影响。65% of total N-uptake occurs between V6 and vegetative tasseling (VT) Approximately 20% of maize nitrogen demand is satisfied between VT and R3 (milk-like liquid present in kernels)</p><div class="table-container"><table><thead><tr><th>Vegetative growth stages</th><th></th><th>Reproductive growth stages</th><th></th></tr></thead><tbody><tr><td>VE</td><td>emergence</td><td>R1</td><td>silking</td></tr><tr><td>V1</td><td>a first leaf</td><td>R2</td><td>blister</td></tr><tr><td>V2</td><td>second leaf</td><td>R3</td><td>milk</td></tr><tr><td>V3</td><td>third leaf</td><td>R4</td><td>dough</td></tr><tr><td>V(n)</td><td>nth leaf</td><td>R5</td><td>dent</td></tr><tr><td>VT</td><td>tasseling</td><td>R6</td><td>physiological maturity</td></tr></tbody></table></div><h2 id="统计方法"><a href="#统计方法" class="headerlink" title="统计方法"></a>统计方法</h2><h3 id="一、线性回归"><a href="#一、线性回归" class="headerlink" title="一、线性回归"></a>一、线性回归</h3><blockquote><p>Arcgis求每个plot的平均植被指数。<br><img src="/2022/05/01/innov2/arcgis.png" class=""></p></blockquote><p>多元线性回归模型（VI&lt;-(stage,N-rate)）</p><img src="/2022/05/01/innov2/eq1.jpg" class=""><p>$Y_i$ is the index value, $x_{iN−rate} $is the nitrogen rate and $x_{istage}$ is the growth stage<br>简单线性回归：因为stage和VI有较大的相关性，所以下面只是分析VI和N-rate对yield的影响<br><img src="/2022/05/01/innov2/eq2.jpg" class=""></p><p>$y_i$ is the maize grain yield and $x_{iindex}$ is the index value.</p><h3 id="二、Saturation-analysis饱和点分析："><a href="#二、Saturation-analysis饱和点分析：" class="headerlink" title="二、Saturation analysis饱和点分析："></a>二、Saturation analysis饱和点分析：</h3><p>加大N-rate至产量不再变化，这个N-rate就是作物的饱和点，我们需要找到这个饱和点，如果VI和产量在同一N-rate处达到饱和，我们可以用这个VI的饱和点来确定作物的饱和点。</p><img src="/2022/05/01/innov2/eq3.jpg" class=""><img src="/2022/05/01/innov2/eq4.jpg" class="">]]></content>
    
    
    <categories>
      
      <category>UAV&amp;RS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>三江平原耕地质量实验报告</title>
    <link href="/landuse/"/>
    <url>/landuse/</url>
    
    <content type="html"><![CDATA[<h1 id="三江平原三市耕地质量实验报告"><a href="#三江平原三市耕地质量实验报告" class="headerlink" title="三江平原三市耕地质量实验报告"></a>三江平原三市耕地质量实验报告</h1><h2 id="作者"><a href="#作者" class="headerlink" title="作者"></a>作者</h2><p>大家好，我是东北师范大学2020级吴蒙蔚，这是我大二下空间分析大作业，从4月23日世界读书日开始，到5月1日劳动节,我一直在肝这份作业。<br>做作业的过程中，书本里抽象的概念变得生动起来，看似轻松的步骤方法，殊不知经历了多少人接力造轮子，不断封装复杂的算法，最后呈现出来简单的接口。弄懂复杂算法的意义在哪里，在于接下来的运用，数值分析课讲到了常微分方程的欧拉法，matlab一行代码可以得到结果，但老师带着我们推了一节课，结果重要吗？方法才是关键，思想才是闪闪发光之处.</p><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p> 三江平原的耕地质量关乎民生，一份合理的耕地质量得分图有着重要的意义.</p><ul><li>首先是设置各个指标的权重：从日常经验来看，积温，有机质，坡度对耕地质量评估的权重应该是高的，分别是0.15，0.2，0.2，我们选择土地去耕作时，也基本就看看是不是温度够，坡度缓，有机质丰富，其实植物生长还需要三大营养素：氮磷钾，这个也是重要的指标，于是权重均为0.1，坡向在东北平原地区并不如丘陵高山地区重要，故设为0.05。最后是降水，因为东北地区整体降水足，和西北缺水地区不同，故其降水权重设为0.1.</li><li>其次是整理思路：<ul><li>我们首先需要什么数据？土壤，积温，降水，地形，土地利用类型。</li><li>其次是怎么处理？积温是个难题，因为我们得到的WorldClim的数据是月平均气温，如果月均气温低于10，那么这个月的积温不能用30$\cdot$(月平均气温)来替代，应该适当缩小。</li><li>一共8个指标，需要8个栅格。</li><li>土壤数据转4次栅格，然后根据分类表重分类可以得到4个指标分数的栅格，</li><li>GDEM地形数据可以得到坡度坡向2个指标分数的栅格。</li><li>降水和积温用栅格计算器得到累积的5个月的降水和积温再按照分类表重分类得到2个指标的得分栅格，</li><li>最后按照权重将8个指标加起来，得到总的质量。</li><li>然后通过土地利用图提取出耕地的质量得分，再运用分割栅格的自然断点法得到5级土地，分区统计得到各县市的耕地质量得分。</li><li>最后提高分辨率：重采样，得到100m的栅格数据</li></ul></li></ul><h2 id="研究区："><a href="#研究区：" class="headerlink" title="研究区："></a>研究区：</h2><h2 id="双鸭山市，佳木斯市，鹤岗市"><a href="#双鸭山市，佳木斯市，鹤岗市" class="headerlink" title="双鸭山市，佳木斯市，鹤岗市"></a>双鸭山市，佳木斯市，鹤岗市</h2><h2 id="数据来源："><a href="#数据来源：" class="headerlink" title="数据来源："></a>数据来源：</h2><h3 id="1-NASA-earthdata，用来查找GDEM数据"><a href="#1-NASA-earthdata，用来查找GDEM数据" class="headerlink" title="1. NASA earthdata，用来查找GDEM数据"></a>1. <a href="https://search.earthdata.nasa.gov/search/">NASA earthdata</a>，用来查找GDEM数据</h3><ul><li>IDM下载器<a href="https://www.internetdownloadmanager.cn/download">下载</a></li><li>举例：N47 E132条带的GDEM数据 <a href="https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/ASTGTM.003/ASTGTMV003_N47E132_dem.tif">https://data.lpdaac.earthdatacloud.nasa.gov/lp-prod-protected/ASTGTM.003/ASTGTMV003_N47E132_dem.tif</a><br> （更改N,E后面数字可以获取其他经纬度的影像）<ul><li><img src="/2022/04/30/landuse/GDEM.jpg" class="" title="GDEM"><h3 id="2-Worldclim"><a href="#2-Worldclim" class="headerlink" title="2. Worldclim"></a>2. Worldclim</h3><a href="https://data.biogeo.ucdavis.edu/data/worldclim/v2.1/base/wc2.1_30s_prec.zip">2010-2018年各月降水</a> ，<a href="https://data.biogeo.ucdavis.edu/data/worldclim/v2.1/base/wc2.1_30s_tavg.zip">各月平均温度</a><h3 id="3-行政区数据来源"><a href="#3-行政区数据来源" class="headerlink" title="3. 行政区数据来源"></a>3. 行政区数据来源</h3>因为是2021年9月下载的，所以不知道来源，这是文件——<a href="https://drive.google.com/file/d/1ckfxhP74KSR9q2N1sR2lSATJIzFOWfLs/view?usp=sharing">谷歌云盘地址</a><h3 id="4-土壤数据"><a href="#4-土壤数据" class="headerlink" title="4. 土壤数据"></a>4. 土壤数据</h3>由郭笑怡老师提供——[谷歌云盘地址]（侵删）(<a href="https://drive.google.com/file/d/1koLqOBiK6T_KUlUT7OzyhThgSBR4HV19/view?usp=sharing">https://drive.google.com/file/d/1koLqOBiK6T_KUlUT7OzyhThgSBR4HV19/view?usp=sharing</a>)  <h3 id="5-GlobaLand30数据"><a href="#5-GlobaLand30数据" class="headerlink" title="5. GlobaLand30数据"></a>5. <a href="http://www.globallandcover.com/">GlobaLand30数据</a></h3><h4 id="所用条带：N52-45，N53-45"><a href="#所用条带：N52-45，N53-45" class="headerlink" title="所用条带：N52_45，N53_45"></a>所用条带：N52_45，N53_45</h4></li></ul></li></ul><h2 id="数据处理分析工具：Arcgis-pro"><a href="#数据处理分析工具：Arcgis-pro" class="headerlink" title="数据处理分析工具：Arcgis pro"></a>数据处理分析工具：Arcgis pro</h2><h2 id="数据处理方法："><a href="#数据处理方法：" class="headerlink" title="数据处理方法："></a>数据处理方法：</h2><h3 id="Extract-by-Mask"><a href="#Extract-by-Mask" class="headerlink" title="Extract by Mask"></a>Extract by Mask</h3>                                <img src="/2022/04/30/landuse/ext_dem.jpg" class="" title="Extract by Mask">                                              <h3 id="FeatureclassToFeatureclass"><a href="#FeatureclassToFeatureclass" class="headerlink" title="FeatureclassToFeatureclass"></a>FeatureclassToFeatureclass</h3> <img src="/2022/04/30/landuse/feature.jpg" class="" title="FeatureclassToFeatureclass">                                            <img src="/2022/04/30/landuse/feature7.jpg" class="" title="FeatureclassToFeatureclass"><h3 id="Extract-By-Attribute"><a href="#Extract-By-Attribute" class="headerlink" title="Extract By Attribute"></a>Extract By Attribute</h3><p><img src="https://s2.loli.net/2022/04/29/YTZwcFGp4xhVkqd.jpg" alt="屏幕截图 2022-04-29 221130.jpg"><br><img src="https://s2.loli.net/2022/04/29/FNpjeLBJ6y49KEC.jpg" alt="屏幕截图 2022-04-29 221130.jpg"></p><h3 id="降水处理"><a href="#降水处理" class="headerlink" title="降水处理"></a>降水处理</h3> <img src="/2022/04/30/landuse/%E9%99%8D%E6%B0%B4%E5%A4%84%E7%90%86.jpg" class="" title="降水">        <img src="/2022/04/30/landuse/allprep.jpg" class="" title="降水处理"><p> <img src="https://s2.loli.net/2022/04/29/cuAUQEoFp59mOwD.jpg" alt="屏幕截图 2022-04-29 221130.jpg"></p><h3 id="土壤处理"><a href="#土壤处理" class="headerlink" title="土壤处理"></a>土壤处理</h3>  <img src="/2022/04/30/landuse/%E9%87%8D%E5%88%86%E7%B1%BB%E5%9C%9F%E5%A3%A4.jpg" class="" title="土壤">   <img src="/2022/04/30/landuse/soil_pro.jpg" class="" title="土壤">   <img src="/2022/04/30/landuse/soil_reclas.jpg" class="" title="土壤"> <h3 id="坡度坡向"><a href="#坡度坡向" class="headerlink" title="坡度坡向"></a>坡度坡向</h3><img src="/2022/04/30/landuse/%E5%9D%A1%E5%BA%A6%E5%9D%A1%E5%90%91.jpg" class="">                <img src="/2022/04/30/landuse/%E5%9C%B0%E5%9B%BE%E4%BB%A3%E6%95%B0%E5%9D%A1%E5%BA%A6.jpg" class=""><h3 id="积温初步方法"><a href="#积温初步方法" class="headerlink" title="积温初步方法"></a>积温初步方法</h3><img src="/2022/04/30/landuse/%E7%A7%AF%E6%B8%A91.jpg" class="">                             <img src="/2022/04/30/landuse/%E7%A7%AF%E6%B8%A92.jpg" class="">                                  <h3 id="积温天数比重法"><a href="#积温天数比重法" class="headerlink" title="积温天数比重法"></a>积温天数比重法</h3><img src="/2022/04/30/landuse/%E7%A7%AF%E6%B8%A93.jpg" class=""><img src="/2022/04/30/landuse/%E9%87%8D%E5%88%86%E7%B1%BB%E6%B8%A9%E5%BA%A6.jpg" class=""><img src="/2022/04/30/landuse/reclass_jiwen.jpg" class="">                                         <h3 id="重分类坡度坡向"><a href="#重分类坡度坡向" class="headerlink" title="重分类坡度坡向"></a>重分类坡度坡向</h3><img src="/2022/04/30/landuse/%E9%87%8D%E5%88%86%E7%B1%BB%E5%9D%A1.jpg" class="">              <p><img src="https://s2.loli.net/2022/04/29/oKanCykeJcAzGpg.jpg" alt="屏幕截图 2022-04-29 221130.jpg">                                               </p><div class="table-container"><table><thead><tr><th>范围重分类</th><th><strong>语法</strong></th></tr></thead><tbody><tr><td><a href="https://pro.arcgis.com/zh-cn/pro-app/2.8/arcpy/spatial-analyst/an-overview-of-transformation-classes.htm">Remap range 帮助</a></td><td>RemapRange (remapTable)</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>remapTable</th><th>参数</th><th>说明</th></tr></thead><tbody><tr><td></td><td>[[startValue, endValue, newValue],…]</td><td>用于将旧值（按范围指定）重映射为新值的重映射表。</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>有机质/%</th><th>全氮/%</th><th>全磷/%</th><th>全钾/%</th><th>坡向</th><th>坡度</th><th>积温</th><th>降水</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td>[-1,0,75]</td></tr><tr><td></td><td></td><td></td><td></td><td>[247.5,292.5,70]</td></tr><tr><td></td><td></td><td></td><td></td><td>[292.5,337.5,60]</td></tr><tr><td></td><td></td><td></td><td></td><td>[337.5,360,50]</td></tr><tr><td></td><td>[0.5,100,100]</td><td></td><td></td><td>[202.5,247.5,80]</td><td></td></tr><tr><td>[0,2,40]</td><td>[0,0.1,50]</td><td>[0,0.05,40]</td><td>[0,1.5,40]</td><td>[0,22.5,50]</td><td>[0,2,100]</td><td>[0,2000,10]</td><td>[0,450,70]</td></tr><tr><td>[2,4,50]</td><td>[0.1,0.2,60]</td><td>[0.05,0.07,50]</td><td>[1.5,1.9,50]</td><td>[22.5,67.5,60]</td><td>[2,6,80]</td><td>[2000,2200,30]</td><td>[450,500,80]</td></tr><tr><td>[4,6,60]</td><td>[0.2,0.3,70]</td><td>[0.07,0.1,60]</td><td>[1.9,2.1,70]</td><td>[67.5,112.5,80]</td><td>[6,15,60]</td><td>[2200,2400,50]</td><td>[500,550,90]</td></tr><tr><td>[6,8,80]</td><td>[0.3,0.4,80]</td><td>[0.1,0.15,80]</td><td>[2.1,2.5,80]</td><td>[112.5,157.5,90]</td><td>[15,25,40]</td><td>[2400,2600,70]</td><td>[550,1000,100]</td></tr><tr><td>[8,100,100]</td><td>[0.4,0.5,90]</td><td>[0.15,100,100]</td><td>[2.5,100,100]</td><td>[157.5,202.5,100]</td><td>[25,90,0]</td><td>[2600,4000,90]</td></tr></tbody></table></div><h3 id="加权求总体质量得分"><a href="#加权求总体质量得分" class="headerlink" title="加权求总体质量得分"></a>加权求总体质量得分</h3><h3 id="自然断点法分割栅格"><a href="#自然断点法分割栅格" class="headerlink" title="自然断点法分割栅格"></a>自然断点法分割栅格</h3><p><strong>Jenks natural breaks optimization seems to be one dimensional k-means</strong><br>There are two steps that must be repeated:</p><ul><li>Calculate the sum of squared deviations from the class means (SDCM).</li><li>Choose a new way of dividing the data into classes, perhaps by moving one or more data points from one class to a different one.<br>New class deviations are then calculated, and the process is repeated until the sum of the within class deviations reaches a minimal value.      <img src="/2022/04/30/landuse/natura_b2.jpg" class="">                                        <img src="/2022/04/30/landuse/natura_break.jpg" class="">   <h3 id="分区统计"><a href="#分区统计" class="headerlink" title="分区统计"></a>分区统计</h3><img src="/2022/04/30/landuse/zonal.jpg" class=""><img src="/2022/04/30/landuse/zonal2.jpg" class=""></li></ul><h3 id="重采样"><a href="#重采样" class="headerlink" title="重采样"></a>重采样</h3><img src="/2022/04/30/landuse/rasample7.jpg" class=""><img src="/2022/04/30/landuse/resample8.jpg" class=""><h3 id="计算权重"><a href="#计算权重" class="headerlink" title="计算权重"></a>计算权重</h3><img src="/2022/04/30/landuse/weight.jpg" class=""><div class="table-container"><table><thead><tr><th>OBJECTID</th><th>Value    Count</th><th>Weight</th></tr></thead><tbody><tr><td></td></tr></tbody></table></div><p>1 级土地|1839|0.07<br>2    级土地|6998|0.25<br>3    级土地|    9212|0.34<br>4 级土地    |    7044|0.26<br>5 级土地    |    2178|0.08</p><h2 id="未解疑问"><a href="#未解疑问" class="headerlink" title="未解疑问"></a>未解疑问</h2><p> 用栅格计算器的条件函数反复嵌套来重分类坡度坡向,笨拙但有用且不失优雅，反而reclassify坡度坡向时，会报错，下面就是报错，我累了，我还是不知道为啥不能重分类</p><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><pre><code class="hljs python">remap=RemapRange([[<span class="hljs-number">0</span>,<span class="hljs-number">22.5</span>,<span class="hljs-number">50</span>],<br>[<span class="hljs-number">22.5</span>,<span class="hljs-number">67.5</span>,<span class="hljs-number">60</span>],<br>[<span class="hljs-number">67.5</span>,<span class="hljs-number">112.5</span>,<span class="hljs-number">80</span>],<br>[<span class="hljs-number">112.5</span>,<span class="hljs-number">157.5</span>,<span class="hljs-number">90</span>],<br>[-<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">75</span>],<br>[<span class="hljs-number">157.5</span>,<span class="hljs-number">202.5</span>,<span class="hljs-number">100</span>],<br>[<span class="hljs-number">202.5</span>,<span class="hljs-number">247.5</span>,<span class="hljs-number">80</span>],<br>[<span class="hljs-number">247.5</span>,<span class="hljs-number">292.5</span>,<span class="hljs-number">70</span>],<br>[<span class="hljs-number">292.5</span>,<span class="hljs-number">337.5</span>,<span class="hljs-number">60</span>],<br>[<span class="hljs-number">337.5</span>,<span class="hljs-number">360</span>,<span class="hljs-number">50</span>]])         <br>reclass_aspect=Reclassify(<span class="hljs-string">&quot;aspect&quot;</span>,<span class="hljs-string">&quot;Value&quot;</span>,remap)<br>reclass_aspect.save(<span class="hljs-string">&quot;reclass_aspect&quot;</span>)<br></code></pre></td></tr></table></figure><blockquote><p>ERROR 000628: Cannot set input into parameter in_raster.</p></blockquote><h2 id="代码流程"><a href="#代码流程" class="headerlink" title="代码流程"></a>代码流程</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><code class="hljs python"><br><span class="hljs-keyword">import</span> arcpy<br><span class="hljs-keyword">from</span> arcpy.sa <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment">#--------通过sql的where语句&quot;Name IN (&#x27;双鸭山市&#x27;, &#x27;鹤岗市&#x27;, &#x27;佳木斯市&#x27;)&quot;-------</span><br><span class="hljs-comment">#--------从要素类到要素类----------------------------------------------------</span><br>arcpy.FeatureClassToFeatureClass_conversion(<br>    <span class="hljs-string">r&quot;C:\Users\17503\Desktop\市界.shp&quot;</span>,<br>    <span class="hljs-string">r&quot;C:\Users\17503\Documents\ArcGIS\Projects\MyProject1\MyProject1.gdb&quot;</span>,<br>    <span class="hljs-string">&quot;city&quot;</span>,<span class="hljs-string">&quot;Name IN (&#x27;双鸭山市&#x27;, &#x27;鹤岗市&#x27;, &#x27;佳木斯市&#x27;)&quot;</span>)<br><span class="hljs-comment">#---------按属性提取 Globaland3土地利用栅格-----------------------------------------------</span><br>attExtract = ExtractByAttributes(<span class="hljs-string">&quot;globaland30&quot;</span>, <span class="hljs-string">&quot;VALUE = 10&quot;</span>) <br>attExtract.save(<span class="hljs-string">r&quot;C:\Users\17503\Documents\ArcGIS\Projects\MyProject1\MyProject1.gdb\agriculture&quot;</span>)<br><span class="hljs-comment">#---------按掩膜提取三江平原三市的耕地栅格----------------------------------------------------</span><br>etr_agriculture=ExtractByMask(attExtract,<span class="hljs-string">r&quot;C:\Users\17503\Documents\ArcGIS\Projects\MyProject1\MyProject1.gdb\city&quot;</span>)<br>etr_agriculture.save(<span class="hljs-string">&quot;etr_agriculture&quot;</span>)<br><span class="hljs-comment">#------------------------------------按掩膜批量提取降水数据-----------------------------------------------</span><br><br>extract=[]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>,<span class="hljs-number">10</span>):<br>    extract.append(ExtractByMask(<span class="hljs-string">r&quot;C:\Users\17503\Downloads\wc21_30s_prec\wc21_30s_prec_0&#123;i&#125;.tif&quot;</span>.<span class="hljs-built_in">format</span>(i=i),<br>                            <span class="hljs-string">r&quot;C:\Users\17503\Documents\ArcGIS\Projects\MyProject1\MyProject1.gdb\etr_agriculture&quot;</span>))<br>    <br><span class="hljs-comment">#-------------------------相加栅格并重分类降水数据--------------------------------   </span><br><br>all_prep=extract[<span class="hljs-number">0</span>]+extract[<span class="hljs-number">1</span>]+extract[<span class="hljs-number">2</span>]+extract[<span class="hljs-number">3</span>]+extract[<span class="hljs-number">4</span>]<br>all_prep.save(<span class="hljs-string">r&quot;C:\Users\17503\Documents\ArcGIS\Projects\MyProject1\MyProject1.gdb\all_prep&quot;</span>)<br>remap=RemapRange([[<span class="hljs-number">0</span>,<span class="hljs-number">450</span>,<span class="hljs-number">70</span>],[<span class="hljs-number">450</span>,<span class="hljs-number">500</span>,<span class="hljs-number">80</span>],[<span class="hljs-number">500</span>,<span class="hljs-number">550</span>,<span class="hljs-number">90</span>],[<span class="hljs-number">550</span>,<span class="hljs-number">1000</span>,<span class="hljs-number">100</span>]])<br>reclass_prep=Reclassify(<span class="hljs-string">&quot;all_prep&quot;</span>,<span class="hljs-string">&quot;Value&quot;</span>,remap)<br>reclass_prep.save(<span class="hljs-string">&quot;reclass_prep&quot;</span>)<br><br><span class="hljs-comment">#--------------------------------------普通积温算法----------------</span><br><span class="hljs-keyword">from</span> arcpy.analysis <span class="hljs-keyword">import</span> *<br>arcpy.env.workspace=<span class="hljs-string">r&quot;C:\Users\17503\Downloads\Compressed\wc2.1_30s_tavg\积温&quot;</span><br>N1=Raster(<span class="hljs-string">&quot;wc21_30s_tavg_09(1).tif&quot;</span>)<br>N2=Raster(<span class="hljs-string">&quot;wc21_30s_tavg_09(2).tif&quot;</span>)<br>N3=Raster(<span class="hljs-string">&quot;wc21_30s_tavg_09(3).tif&quot;</span>)<br>N4=Raster(<span class="hljs-string">&quot;wc21_30s_tavg_09(4).tif&quot;</span>)<br>N5=Raster(<span class="hljs-string">&quot;wc21_30s_tavg_09(5).tif&quot;</span>)<br>out_ras=N1+N2+N3+N4+N5<br>out_ras.save(<span class="hljs-string">&quot;output.tif&quot;</span>)<br>etr_temp=ExtractByMask(<span class="hljs-string">&quot;output.tif&quot;</span>,<br><span class="hljs-string">r&quot;C:\Users\17503\Documents\ArcGIS\Projects\MyProject1\MyProject1.gdb\etr_agriculture&quot;</span>)<br>etr_temp.save(<span class="hljs-string">r&quot;C:\Users\17503\Documents\ArcGIS\Projects\MyProject1\MyProject1.gdb\etr_temp&quot;</span>)<br><br><span class="hljs-comment">#-------如果平均积温小于10，应该乘的天数，应小于30，平均气温越低，天数小于10的概率越大--------</span><br><span class="hljs-comment">#-------设月平均气温是 n 且 n&lt;10,则求积温时，乘天数为30*n/(10),即 3n-----------------------</span><br>etr=[]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>):<br><span class="hljs-comment">#循环：按掩膜提取，并存到数组etr里，python数组从0开始  </span><br>    etr.append(ExtractByMask(<span class="hljs-string">&quot;wc21_30s_tavg_09(&#123;i&#125;).tif&quot;</span>.<span class="hljs-built_in">format</span>(i=i),<br>                     <span class="hljs-string">r&quot;C:\Users\17503\Documents\ArcGIS\Projects\MyProject1\MyProject1.gdb\etr_agriculture&quot;</span>))<br>  <span class="hljs-comment">#Con函数判断月均气温是否小于10，如果是，则赋值3n^2，否则便直接=30n</span><br>    etr[i-<span class="hljs-number">1</span>]=Con(etr[i-<span class="hljs-number">1</span>]&lt;<span class="hljs-number">10</span>,etr[i-<span class="hljs-number">1</span>]*etr[i-<span class="hljs-number">1</span>]*<span class="hljs-number">3</span>,etr[i-<span class="hljs-number">1</span>]*<span class="hljs-number">30</span>)<br>    etr[i-<span class="hljs-number">1</span>].save(<span class="hljs-string">r&quot;C:\Users\17503\Documents\ArcGIS\Projects\MyProject1\MyProject1.gdb\etr_tempr&#123;i&#125;&quot;</span>.<span class="hljs-built_in">format</span>(i=i))<br>    <br>out_temp2=etr[<span class="hljs-number">0</span>]+etr[<span class="hljs-number">1</span>]+etr[<span class="hljs-number">2</span>]+etr[<span class="hljs-number">3</span>]+etr[<span class="hljs-number">4</span>]<br>out_temp2.save(<span class="hljs-string">r&quot;C:\Users\17503\Documents\ArcGIS\Projects\MyProject1\MyProject1.gdb\etrfinal&quot;</span>)<br>    <br><span class="hljs-comment">#---------------积温重分类，Remap_Range映射:[start,end,value]把从 start到 end 之间的值映射成 value-------------------------    </span><br>    <br>    <br>arcpy.env.workspace=<span class="hljs-string">r&quot;C:\Users\17503\Documents\ArcGIS\Projects\MyProject1\MyProject1.gdb&quot;</span><br>remap=RemapRange([[<span class="hljs-number">0</span>,<span class="hljs-number">2000</span>,<span class="hljs-number">10</span>],[<span class="hljs-number">2000</span>,<span class="hljs-number">2200</span>,<span class="hljs-number">30</span>],[<span class="hljs-number">2200</span>,<span class="hljs-number">2400</span>,<span class="hljs-number">50</span>],[<span class="hljs-number">2400</span>,<span class="hljs-number">2600</span>,<span class="hljs-number">70</span>],[<span class="hljs-number">2600</span>,<span class="hljs-number">3000</span>,<span class="hljs-number">90</span>]])<br>Reclassify(<span class="hljs-string">&quot;etrfinal&quot;</span>,<span class="hljs-string">&quot;Value&quot;</span>,remap)<br>reclass=Reclassify(<span class="hljs-string">&quot;etrfinal&quot;</span>,<span class="hljs-string">&quot;Value&quot;</span>,remap)<br>reclass.save(<span class="hljs-string">&quot;reclass_temp&quot;</span>)    <br><br><br><span class="hljs-comment">#----------SoilData土壤数据先裁剪再通过PolygonToRaster栅格化，再重分类，反复4次--------------------------</span><br><span class="hljs-comment">#----------------裁剪------------------------</span><br>Clip(<span class="hljs-string">r&quot;C:\Users\17503\Desktop\study\SoilData\土壤数据.shp&quot;</span>,<span class="hljs-string">&quot;县clip&quot;</span>,<span class="hljs-string">&quot;土clip&quot;</span>)<br><span class="hljs-comment">#------------按有机质栅格化，重分类------------</span><br>arcpy.conversion.PolygonToRaster(<span class="hljs-string">&quot;土clip&quot;</span>,<span class="hljs-string">&quot;有机质&quot;</span>,<span class="hljs-string">&quot;yjw_ras&quot;</span>)<br>remap=RemapRange([[<span class="hljs-number">0</span>,<span class="hljs-number">2</span>,<span class="hljs-number">40</span>],[<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">50</span>],[<span class="hljs-number">4</span>,<span class="hljs-number">6</span>,<span class="hljs-number">60</span>],[<span class="hljs-number">6</span>,<span class="hljs-number">8</span>,<span class="hljs-number">80</span>],[<span class="hljs-number">8</span>,<span class="hljs-number">100</span>,<span class="hljs-number">100</span>]])<br>reclass_yjw=Reclassify(<span class="hljs-string">&quot;yjw_ras&quot;</span>,<span class="hljs-string">&quot;Value&quot;</span>,remap)<br>reclass_yjw.save(<span class="hljs-string">&quot;reclass_yjw&quot;</span>)<br><span class="hljs-comment">#------------按全磷栅格化，重分类------------</span><br>arcpy.conversion.PolygonToRaster(<span class="hljs-string">&quot;土clip&quot;</span>,<span class="hljs-string">&quot;全磷&quot;</span>,<span class="hljs-string">&quot;ql_ras&quot;</span>)<br>remap=RemapRange([[<span class="hljs-number">0</span>,<span class="hljs-number">0.05</span>,<span class="hljs-number">40</span>],[<span class="hljs-number">0.05</span>,<span class="hljs-number">0.07</span>,<span class="hljs-number">50</span>],[<span class="hljs-number">0.07</span>,<span class="hljs-number">0.1</span>,<span class="hljs-number">60</span>],[<span class="hljs-number">0.1</span>,<span class="hljs-number">0.15</span>,<span class="hljs-number">80</span>],[<span class="hljs-number">0.15</span>,<span class="hljs-number">100</span>,<span class="hljs-number">100</span>]])<br>reclass_ql=Reclassify(<span class="hljs-string">&quot;ql_ras&quot;</span>,<span class="hljs-string">&quot;Value&quot;</span>,remap)<br>reclass_ql.save(<span class="hljs-string">&quot;reclass_ql&quot;</span>)<br><span class="hljs-comment">#------------按全氮栅格化，重分类------------</span><br>arcpy.conversion.PolygonToRaster(<span class="hljs-string">&quot;土clip&quot;</span>,<span class="hljs-string">&quot;全氮&quot;</span>,<span class="hljs-string">&quot;qN_ras&quot;</span>)<br>remap=RemapRange([[<span class="hljs-number">0</span>,<span class="hljs-number">0.1</span>,<span class="hljs-number">50</span>],[<span class="hljs-number">0.1</span>,<span class="hljs-number">0.2</span>,<span class="hljs-number">60</span>],[<span class="hljs-number">0.2</span>,<span class="hljs-number">0.3</span>,<span class="hljs-number">70</span>],[<span class="hljs-number">0.3</span>,<span class="hljs-number">0.4</span>,<span class="hljs-number">80</span>],[<span class="hljs-number">0.4</span>,<span class="hljs-number">0.5</span>,<span class="hljs-number">90</span>],[<span class="hljs-number">0.5</span>,<span class="hljs-number">100</span>,<span class="hljs-number">100</span>]])<br>reclass_qN=Reclassify(<span class="hljs-string">&quot;qN_ras&quot;</span>,<span class="hljs-string">&quot;Value&quot;</span>,remap)<br>reclass_qN.save(<span class="hljs-string">&quot;reclass_qN&quot;</span>)<br><span class="hljs-comment">#------------按全钾栅格化，重分类------------</span><br>arcpy.conversion.PolygonToRaster(<span class="hljs-string">&quot;土clip&quot;</span>,<span class="hljs-string">&quot;全钾&quot;</span>,<span class="hljs-string">&quot;qK_ras&quot;</span>)<br>remap=RemapRange([[<span class="hljs-number">0</span>,<span class="hljs-number">1.5</span>,<span class="hljs-number">40</span>],[<span class="hljs-number">1.5</span>,<span class="hljs-number">1.9</span>,<span class="hljs-number">50</span>],[<span class="hljs-number">1.9</span>,<span class="hljs-number">2.1</span>,<span class="hljs-number">70</span>],[<span class="hljs-number">2.1</span>,<span class="hljs-number">2.5</span>,<span class="hljs-number">80</span>],[<span class="hljs-number">2.5</span>,<span class="hljs-number">100</span>,<span class="hljs-number">100</span>]])<br>reclass_qK=Reclassify(<span class="hljs-string">&quot;qK_ras&quot;</span>,<span class="hljs-string">&quot;Value&quot;</span>,remap)<br>reclass_qK.save(<span class="hljs-string">&quot;reclass_qK&quot;</span>)<br><br><span class="hljs-comment">#----------坡度坡向---------------------</span><br><span class="hljs-comment">#-------省略 Mosaic环节，对不起，&quot;ASTGTMV003_N45E129_dem.tif&quot;就是 Mosaic之后的 GDEM数据-----------</span><br>extra_dem=ExtractByMask(<span class="hljs-string">&quot;ASTGTMV003_N45E129_dem.tif&quot;</span>,<span class="hljs-string">&quot;县clip&quot;</span>)<br>extra_dem.save(<span class="hljs-string">&quot;extra_dem&quot;</span>)<br><span class="hljs-comment">#地图代数</span><br><span class="hljs-comment">#-----------坡度----------</span><br>slope=Slope(<span class="hljs-string">&quot;extra_dem&quot;</span>)<br>slope.save(<span class="hljs-string">&quot;slope&quot;</span>)<br><span class="hljs-comment">#----------坡向-----------</span><br>aspect=Aspect(<span class="hljs-string">&quot;extra_dem&quot;</span>)<br>aspect.save(<span class="hljs-string">&quot;aspect&quot;</span>)<br><span class="hljs-comment">#----------根据Con函数逐步分类坡度-----------</span><br>reclass_slope=Con(slope&lt;=<span class="hljs-number">2.0</span>,<span class="hljs-number">100</span>,<br>Con(slope&lt;=<span class="hljs-number">6.0</span>,<span class="hljs-number">80</span>,<br>Con(slope&lt;=<span class="hljs-number">15.0</span>,<span class="hljs-number">60</span>,<br>Con(slope&lt;=<span class="hljs-number">25.0</span>,<span class="hljs-number">40</span>,<span class="hljs-number">20</span>))))<br>reclass_slope.save(<span class="hljs-string">&quot;reclass_slope&quot;</span>)<br><span class="hljs-comment">#---------根据Con函数逐步分类坡向----------------------------</span><br>reclass_aspect=Con(aspect&lt;=-<span class="hljs-number">1.0</span>,<span class="hljs-number">75</span>,Con(aspect&lt;=<span class="hljs-number">22.5</span>,<span class="hljs-number">50</span>,<br>    Con(aspect&lt;=<span class="hljs-number">67.5</span>,<span class="hljs-number">60</span>,Con(aspect&lt;=<span class="hljs-number">112.5</span>,<span class="hljs-number">80</span>,<br>        Con(aspect&lt;=<span class="hljs-number">157.5</span>,<span class="hljs-number">90</span>,Con(aspect&lt;=<span class="hljs-number">202.5</span>,<span class="hljs-number">100</span>,<br>        Con(aspect&lt;=<span class="hljs-number">247.5</span>,<span class="hljs-number">80</span>,<br>        Con(aspect&lt;=<span class="hljs-number">292.5</span>,<span class="hljs-number">70</span>,<br>        Con(aspect&lt;=<span class="hljs-number">337.5</span>,<span class="hljs-number">60</span>,<br>        Con(aspect&lt;=<span class="hljs-number">360</span>,<span class="hljs-number">50</span>,<span class="hljs-number">0</span>))))))))))<br><span class="hljs-comment">#-----------加权算总耕地质量栅格-------------------------</span><br>quality=reclass_prep*<span class="hljs-number">0.1</span>+reclass_aspect*<span class="hljs-number">0.05</span>+reclass_slope*<span class="hljs-number">0.2</span>+reclass*<span class="hljs-number">0.15</span>+reclass_yjw*<span class="hljs-number">0.2</span>+reclass_qK*<span class="hljs-number">0.1</span>+reclass_qN*<span class="hljs-number">0.1</span>+reclass_ql*<span class="hljs-number">0.1</span><br>quality.save(<span class="hljs-string">&quot;quality&quot;</span>)<br><span class="hljs-comment">#------------自然断点法分割栅格------------------------</span><br>outslice = Slice(<span class="hljs-string">&quot;quality&quot;</span>,<span class="hljs-number">5</span>,<span class="hljs-string">&quot;NATURAL_BREAKS&quot;</span>)<br>outslice.save(<span class="hljs-string">&quot;outslice&quot;</span>)<br><span class="hljs-comment">#-----------分区统计-----------------------------------</span><br>zonal=ZonalStatistics(<span class="hljs-string">&quot;县clip&quot;</span>,<span class="hljs-string">&quot;OBJECTID&quot;</span>,outslice,<span class="hljs-string">&quot;MEAN&quot;</span>)<br><span class="hljs-comment">#-------------修改栅格大小：重采样--------------------------------------</span><br>arcpy.Resample_management(<span class="hljs-string">&quot;Extract_outs1&quot;</span>,<span class="hljs-string">&quot;outresample&quot;</span>,<span class="hljs-string">&quot;0.000025 0.000025&quot;</span>,<span class="hljs-string">&quot;NEAREST&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><img src="/2022/04/30/landuse/Layout1.jpg" class=""><img src="/2022/04/30/landuse/Layout2.jpg" class=""><h2 id="项目下载地址"><a href="#项目下载地址" class="headerlink" title="项目下载地址"></a><a href="https://github.com/VernalsWind/VernalsWind.github.io/blob/main/MyProject.aprx">项目下载地址</a></h2>]]></content>
    
    
    <categories>
      
      <category>GIS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>assignment</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
